[{"C:\\src\\citetool\\src\\index.js":"1","C:\\src\\citetool\\src\\App.js":"2","C:\\src\\citetool\\src\\reportWebVitals.js":"3","C:\\src\\citetool\\src\\app\\components\\ResultList.js":"4","C:\\src\\citetool\\src\\app\\components\\DetailsFrame.js":"5"},{"size":789,"mtime":1609680879772,"results":"6","hashOfConfig":"7"},{"size":11510,"mtime":1609686581761,"results":"8","hashOfConfig":"7"},{"size":375,"mtime":1609595291564,"results":"9","hashOfConfig":"7"},{"size":7657,"mtime":1609680786903,"results":"10","hashOfConfig":"7"},{"size":3864,"mtime":1609680803278,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1nlt2up",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"18"},"C:\\src\\citetool\\src\\index.js",[],"C:\\src\\citetool\\src\\App.js",["25"],"C:\\src\\citetool\\src\\reportWebVitals.js",[],["26","27"],"C:\\src\\citetool\\src\\app\\components\\ResultList.js",["28","29","30","31","32","33","34"],"import {\r\n  DetailsList,\r\n  MarqueeSelection,\r\n  Selection,\r\n  SelectionMode,\r\n  DetailsListLayoutMode,\r\n  Fabric,\r\n  ScrollablePane,\r\n  ScrollbarVisibility,\r\n  mergeStyleSets,\r\n} from \"@fluentui/react\";\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nconst classNames = mergeStyleSets({\r\n  scrollWrapper: {\r\n    position: \"relative\",\r\n    height: \"80vh\",\r\n    width: \"50vw\",\r\n  },\r\n  fileIconHeaderIcon: {\r\n    padding: 0,\r\n    fontSize: \"16px\",\r\n  },\r\n  fileIconCell: {\r\n    textAlign: \"center\",\r\n    selectors: {\r\n      \"&:before\": {\r\n        content: \".\",\r\n        display: \"inline-block\",\r\n        verticalAlign: \"middle\",\r\n        height: \"100%\",\r\n        width: \"0px\",\r\n        visibility: \"hidden\",\r\n      },\r\n    },\r\n  },\r\n  fileIconImg: {\r\n    verticalAlign: \"middle\",\r\n    maxHeight: \"16px\",\r\n    maxWidth: \"16px\",\r\n  },\r\n  controlWrapper: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n  exampleToggle: {\r\n    display: \"inline-block\",\r\n    marginBottom: \"10px\",\r\n    marginRight: \"30px\",\r\n  },\r\n  selectionDetails: {\r\n    marginBottom: \"20px\",\r\n  },\r\n});\r\nconst controlStyles = {\r\n  root: {\r\n    margin: \"0 30px 20px 0\",\r\n    maxWidth: \"300px\",\r\n  },\r\n};\r\n\r\nexport default class ResultList extends Component {\r\n  _selection;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { onSelectSingle } = this.props;\r\n\r\n    const columns = [\r\n      {\r\n        key: \"column1\",\r\n        name: \"Relevance\",\r\n        fieldName: \"relevance\",\r\n        minWidth: 30,\r\n        maxWidth: 60,\r\n        isRowHeader: true,\r\n        isSorted: true,\r\n        isSortedDescending: true,\r\n        onColumnClick: this._onColumnClick,\r\n        data: \"number\",\r\n        isPadded: true,\r\n      },\r\n      {\r\n        key: \"column2\",\r\n        name: \"Name\",\r\n        fieldName: \"name\",\r\n        minWidth: 300,\r\n        maxWidth: 500,\r\n        sortAscendingAriaLabel: \"Sorted A to Z\",\r\n        sortDescendingAriaLabel: \"Sorted Z to A\",\r\n        onColumnClick: this._onColumnClick,\r\n        data: \"string\",\r\n        isPadded: true,\r\n        isMultiline: true,\r\n      },\r\n      {\r\n        key: \"column3\",\r\n        name: \"Authors\",\r\n        fieldName: \"authors\",\r\n        minWidth: 75,\r\n        maxWidth: 100,\r\n        onColumnClick: this._onColumnClick,\r\n        data: \"string\",\r\n        isPadded: true,\r\n        isMultiline: true,\r\n      },\r\n      {\r\n        key: \"column4\",\r\n        name: \"Year\",\r\n        fieldName: \"year\",\r\n        minWidth: 50,\r\n        maxWidth: 75,\r\n        onColumnClick: this._onColumnClick,\r\n        data: \"string\",\r\n        isPadded: true,\r\n      },\r\n    ];\r\n\r\n    this._selection = new Selection({\r\n      onSelectionChanged: () => {\r\n        const selectionCount = this._selection.getSelectedCount();\r\n        if (selectionCount === 1) {\r\n          onSelectSingle(this._selection.getSelection()[0]);\r\n        }\r\n\r\n        this.setState({\r\n          selectionDetails: this._getSelectionDetails(),\r\n        });\r\n      },\r\n    });\r\n\r\n    this.state = {\r\n      announcedMessage: null,\r\n      columns: columns,\r\n      selectionDetails: this._getSelectionDetails(),\r\n      selectedItem: null,\r\n      isModalSelection: false,\r\n      isCompactMode: false,\r\n\r\n      //commandBarFarItems: commandBarFarItems,\r\n      //commandBarItems: commandBarItems,\r\n      //commandBarOverflowItems: commandBarOverflowItems,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      columns,\r\n      isCompactMode,\r\n      selectionDetails,\r\n      announcedMessage,\r\n      commandBarFarItems,\r\n      commandBarOverflowItems,\r\n      commandBarItems,\r\n    } = this.state;\r\n\r\n    const { items } = this.props;\r\n\r\n    return (\r\n      <Fabric>\r\n        {/*<div className={classNames.controlWrapper}>\r\n          <CommandBar\r\n            items={commandBarItems}\r\n            overflowItems={commandBarOverflowItems}\r\n            overflowButtonProps={{ ariaLabel: \"More Commands\" }}\r\n            farItems={commandBarFarItems}\r\n            ariaLabel=\"Use left and right arrow keys to navigate between commands\"\r\n          />\r\n          <Toggle\r\n            label=\"Enable compact mode\"\r\n            checked={isCompactMode}\r\n            onChange={this._onChangeCompactMode}\r\n            onText=\"Compact\"\r\n            offText=\"Normal\"\r\n            styles={controlStyles}\r\n          />\r\n          <TextField\r\n            label=\"Filter by name:\"\r\n            onChange={this._onChangeText}\r\n            styles={controlStyles}\r\n          />\r\n          <Announced message={announcedMessage} />\r\n        </div>\r\n          <Announced\r\n            message={`Number of items after filter applied: ${items.length}.`}\r\n          />\r\n        </div>*/}\r\n        <ScrollablePane\r\n          className={classNames.scrollWrapper}\r\n          scrollbarVisibility={ScrollbarVisibility.auto}\r\n        >\r\n          <MarqueeSelection selection={this._selection}>\r\n            <DetailsList\r\n              items={items}\r\n              compact={true}\r\n              columns={columns}\r\n              selectionMode={SelectionMode.multiple}\r\n              getKey={this._getKey}\r\n              setKey=\"multiple\"\r\n              layoutMode={DetailsListLayoutMode.justified}\r\n              isHeaderVisible={true}\r\n              selection={this._selection}\r\n              selectionPreservedOnEmptyClick={true}\r\n              onItemInvoked={this._onItemInvoked}\r\n              enterModalSelectionOnTouch={true}\r\n              ariaLabelForSelectionColumn=\"Toggle selection\"\r\n              ariaLabelForSelectAllCheckbox=\"Toggle selection for all items\"\r\n              checkButtonAriaLabel=\"Row checkbox\"\r\n            />\r\n          </MarqueeSelection>\r\n        </ScrollablePane>\r\n      </Fabric>\r\n    );\r\n  }\r\n\r\n  _componentDidUpdate(previousProps, previousState) {\r\n    if (\r\n      previousState.isModalSelection !== this.state.isModalSelection &&\r\n      !this.state.isModalSelection\r\n    ) {\r\n      this._selection.setAllSelected(false);\r\n    }\r\n  }\r\n\r\n  _getKey(item, index) {\r\n    return item.key;\r\n  }\r\n\r\n  _onChangeText = (ev, text) => {\r\n    this.setState({\r\n      items: text\r\n        ? this._allItems.filter((i) => i.name.toLowerCase().indexOf(text) > -1)\r\n        : this._allItems,\r\n    });\r\n  };\r\n\r\n  _getSelectionDetails() {\r\n    const selectionCount = this._selection.getSelectedCount();\r\n    switch (selectionCount) {\r\n      case 0:\r\n        return \"No items selected\";\r\n      case 1:\r\n        return \"1 item selected: \" + this._selection.getSelection()[0].name;\r\n      default:\r\n        return `${selectionCount} items selected`;\r\n    }\r\n  }\r\n\r\n  _onColumnClick = (ev, column) => {\r\n    const { columns } = this.state;\r\n    const { items } = this.props;\r\n    const newColumns = columns.slice();\r\n    const currColumn = newColumns.filter(\r\n      (currCol) => column.key === currCol.key\r\n    )[0];\r\n    newColumns.forEach((newCol) => {\r\n      if (newCol === currColumn) {\r\n        currColumn.isSortedDescending = !currColumn.isSortedDescending;\r\n        currColumn.isSorted = true;\r\n        this.setState({\r\n          announcedMessage: `${currColumn.name} is sorted ${currColumn.isSortedDescending ? \"descending\" : \"ascending\"\r\n            }`,\r\n        });\r\n      } else {\r\n        newCol.isSorted = false;\r\n        newCol.isSortedDescending = true;\r\n      }\r\n    });\r\n    const newItems = _copyAndSort(\r\n      items,\r\n      currColumn.fieldName,\r\n      currColumn.isSortedDescending\r\n    );\r\n    this.setState({\r\n      columns: newColumns,\r\n      items: newItems,\r\n    });\r\n  };\r\n}\r\n\r\nfunction _copyAndSort(items, columnKey, isSortedDescending) {\r\n  const key = columnKey;\r\n  return items\r\n    .slice(0)\r\n    .sort((a, b) =>\r\n      (isSortedDescending ? a[key] < b[key] : a[key] > b[key]) ? 1 : -1\r\n    );\r\n}\r\n","C:\\src\\citetool\\src\\app\\components\\DetailsFrame.js",["35"],"import {\r\n    Stack,\r\n    DefaultButton,\r\n    PrimaryButton,\r\n    ActionButton,\r\n    ScrollablePane,\r\n    ScrollbarVisibility,\r\n    mergeStyleSets,\r\n    Link,\r\n    Text,\r\n} from \"@fluentui/react\";\r\nimport React, { Component } from \"react\";\r\n\r\nconst classNames = mergeStyleSets({\r\n    detailsStack: {\r\n        height: \"80vh\",\r\n    },\r\n    scrollWrapper: {\r\n        position: \"relative\",\r\n        height: \"35vh\",\r\n    },\r\n});\r\nexport default class DetailsFrame extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { selectedPaper, onPaperAction } = this.props;\r\n        if (!selectedPaper) {\r\n            return null;\r\n        }\r\n\r\n        return (\r\n            <Stack tokens={{ padding: 20, childrenGap: 5 }}>\r\n                <Stack horizontal tokens={{ childrenGap: 5 }}>\r\n                    <ActionButton\r\n                        text=\"To Paper Pool\"\r\n                        iconProps={{ iconName: \"AllApps\" }}\r\n                        allowDisabledFocus\r\n                        disabled={false}\r\n                        onClick={() => {\r\n                            onPaperAction(selectedPaper, \"move-to-result\");\r\n                        }}\r\n                    />\r\n                    <PrimaryButton\r\n                        text=\"To Relevant List\"\r\n                        iconProps={{ iconName: \"Accept\" }}\r\n                        allowDisabledFocus\r\n                        disabled={false}\r\n                        onClick={() => {\r\n                            onPaperAction(selectedPaper, \"move-to-relevant\");\r\n                        }}\r\n                    />\r\n                    <DefaultButton\r\n                        text=\"To Irrelevant List\"\r\n                        iconProps={{ iconName: \"StatusCircleErrorX\" }}\r\n                        allowDisabledFocus\r\n                        disabled={false}\r\n                        onClick={() => {\r\n                            onPaperAction(selectedPaper, \"move-to-not-relevant\");\r\n                        }}\r\n                    />\r\n                </Stack>\r\n\r\n                <Text variant={\"mediumPlus\"}>{selectedPaper.name}</Text>\r\n                <Text>\r\n                    <b>Authors:</b> <i>{selectedPaper.authors}</i>\r\n                </Text>\r\n                <Text>\r\n                    <b>In:</b> <i>{selectedPaper.publication}</i>\r\n                </Text>\r\n                <ScrollablePane\r\n                    className={classNames.scrollWrapper}\r\n                    scrollbarVisibility={ScrollbarVisibility.auto}\r\n                >\r\n                    <Text>\r\n                        <b>Abstract:</b> {selectedPaper.abstract}\r\n                    </Text>\r\n                </ScrollablePane>\r\n\r\n                <Stack\r\n                    horizontal\r\n                    horizontalAlign=\"space-between\"\r\n                    tokens={{ childrenGap: 5 }}\r\n                >\r\n                    <Text>\r\n                        <b>Year:</b> {selectedPaper.year}\r\n                    </Text>\r\n                    <Text>\r\n                        <b>Type:</b> {selectedPaper.type}\r\n                    </Text>\r\n                    <Text>\r\n                        <b>DOI:</b>{\" \"}\r\n                        <Link href={selectedPaper.abstractlink}>{selectedPaper.doi}</Link>\r\n                    </Text>\r\n                </Stack>\r\n                <Stack\r\n                    horizontal\r\n                    horizontalAlign=\"space-between\"\r\n                    tokens={{ childrenGap: 10 }}\r\n                >\r\n                    <Text>\r\n                        <b>Relevance Score:</b> {selectedPaper.relevance}\r\n                    </Text>\r\n                    <Text>\r\n                        <b>#Cited-by:</b> {selectedPaper.citedbycount}\r\n                    </Text>\r\n                </Stack>\r\n            </Stack>\r\n        );\r\n    }\r\n}\r\n",{"ruleId":"36","severity":1,"message":"37","line":109,"column":27,"nodeType":"38","messageId":"39","endLine":109,"endColumn":29},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":56,"column":7,"nodeType":"46","messageId":"47","endLine":56,"endColumn":20},{"ruleId":"44","severity":1,"message":"48","line":151,"column":7,"nodeType":"46","messageId":"47","endLine":151,"endColumn":20},{"ruleId":"44","severity":1,"message":"49","line":152,"column":7,"nodeType":"46","messageId":"47","endLine":152,"endColumn":23},{"ruleId":"44","severity":1,"message":"50","line":153,"column":7,"nodeType":"46","messageId":"47","endLine":153,"endColumn":23},{"ruleId":"44","severity":1,"message":"51","line":154,"column":7,"nodeType":"46","messageId":"47","endLine":154,"endColumn":25},{"ruleId":"44","severity":1,"message":"52","line":155,"column":7,"nodeType":"46","messageId":"47","endLine":155,"endColumn":30},{"ruleId":"44","severity":1,"message":"53","line":156,"column":7,"nodeType":"46","messageId":"47","endLine":156,"endColumn":22},{"ruleId":"54","severity":1,"message":"55","line":24,"column":5,"nodeType":"56","messageId":"57","endLine":26,"endColumn":6},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'controlStyles' is assigned a value but never used.","Identifier","unusedVar","'isCompactMode' is assigned a value but never used.","'selectionDetails' is assigned a value but never used.","'announcedMessage' is assigned a value but never used.","'commandBarFarItems' is assigned a value but never used.","'commandBarOverflowItems' is assigned a value but never used.","'commandBarItems' is assigned a value but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]