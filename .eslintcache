[{"C:\\Users\\tobias\\Documents\\dtdiwork\\citer\\src\\App.js":"1","C:\\Users\\tobias\\Documents\\dtdiwork\\citer\\src\\app\\components\\DetailsFrame.js":"2","C:\\Users\\tobias\\Documents\\dtdiwork\\citer\\src\\app\\components\\ResultList.js":"3","C:\\Users\\tobias\\Documents\\dtdiwork\\citer\\src\\app\\components\\ApiModal.js":"4","C:\\Users\\tobias\\Documents\\dtdiwork\\citer\\src\\index.js":"5","C:\\Users\\tobias\\Documents\\dtdiwork\\citer\\src\\reportWebVitals.js":"6"},{"size":19522,"mtime":1609804190952,"results":"7","hashOfConfig":"8"},{"size":4709,"mtime":1609800314792,"results":"9","hashOfConfig":"8"},{"size":4310,"mtime":1609801354529,"results":"10","hashOfConfig":"8"},{"size":3489,"mtime":1609708714580,"results":"11","hashOfConfig":"8"},{"size":708,"mtime":1609800676082,"results":"12","hashOfConfig":"8"},{"size":362,"mtime":1608548795658,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1e5t94u",{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"C:\\Users\\tobias\\Documents\\dtdiwork\\citer\\src\\App.js",[],"C:\\Users\\tobias\\Documents\\dtdiwork\\citer\\src\\app\\components\\DetailsFrame.js",["28"],"C:\\Users\\tobias\\Documents\\dtdiwork\\citer\\src\\app\\components\\ResultList.js",["29"],"import {\r\n  ShimmeredDetailsList,\r\n  Selection,\r\n  SelectionMode,\r\n  DetailsListLayoutMode,\r\n  mergeStyleSets,\r\n} from \"@fluentui/react\";\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nconst classNames = mergeStyleSets({\r\n  scrollWrapper: {\r\n    position: \"relative\",\r\n    height: \"65vh\",\r\n  },\r\n  controlWrapper: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n});\r\n\r\nexport default class ResultList extends Component {\r\n  _selection;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { onSelectSingle } = this.props;\r\n\r\n    const columns = [\r\n      {\r\n        key: \"column1\",\r\n        name: \"Relevance\",\r\n        fieldName: \"relevance\",\r\n        minWidth: 30,\r\n        maxWidth: 50,\r\n        isSorted: true,\r\n        isSortedDescending: true,\r\n        onColumnClick: this._onColumnClick,\r\n        onRender: (item) => {\r\n          return <span>{(item.relevance * 100).toFixed(2) + \"%\"}</span>;\r\n        },\r\n        data: \"string\",\r\n        isPadded: true,\r\n      },\r\n      {\r\n        key: \"column2\",\r\n        name: \"Name\",\r\n        fieldName: \"name\",\r\n        maxWidth: 350,\r\n        sortAscendingAriaLabel: \"Sorted A to Z\",\r\n        sortDescendingAriaLabel: \"Sorted Z to A\",\r\n        onColumnClick: this._onColumnClick,\r\n        data: \"string\",\r\n        isPadded: true,\r\n        isMultiline: true,\r\n      },\r\n      {\r\n        key: \"column3\",\r\n        name: \"Author/Year\",\r\n        fieldName: \"authors\",\r\n        minWidth: 75,\r\n        maxWidth: 150,\r\n        onColumnClick: this._onColumnClick,\r\n        data: \"string\",\r\n        onRender: (item) => {\r\n          return (\r\n            <span>\r\n              {item.authors} ({item.year})\r\n            </span>\r\n          );\r\n        },\r\n        isPadded: true,\r\n        isMultiline: true,\r\n      },\r\n    ];\r\n\r\n    this._selection = new Selection({\r\n      onSelectionChanged: () => {\r\n        const selectionCount = this._selection.getSelectedCount();\r\n        if (selectionCount === 1) {\r\n          onSelectSingle(this._selection.getSelection()[0]);\r\n        }\r\n      },\r\n    });\r\n\r\n    this.state = {\r\n      announcedMessage: null,\r\n      columns: columns,\r\n      selectedItem: null,\r\n      isModalSelection: false,\r\n      isCompactMode: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { columns } = this.state;\r\n\r\n    const { items, isLoading } = this.props;\r\n\r\n    return (\r\n      <ShimmeredDetailsList\r\n        items={items}\r\n        enableShimmer={isLoading || items.length === 0}\r\n        compact={false}\r\n        onColumnClick={this._onColumnClick}\r\n        columns={columns}\r\n        selectionMode={SelectionMode.single}\r\n        getKey={this._getKey}\r\n        setKey=\"multiple\"\r\n        layoutMode={DetailsListLayoutMode.fixedColumns}\r\n        isHeaderVisible={true}\r\n        selection={this._selection}\r\n        selectionPreservedOnEmptyClick={true}\r\n        enterModalSelectionOnTouch={true}\r\n        ariaLabelForSelectionColumn=\"Toggle selection\"\r\n        ariaLabelForSelectAllCheckbox=\"Toggle selection for all items\"\r\n        checkButtonAriaLabel=\"Row checkbox\"\r\n      />\r\n    );\r\n  }\r\n\r\n  _getKey(item, index) {\r\n    return item ? item.key : index;\r\n  }\r\n\r\n  _onColumnClick = (ev, column) => {\r\n    const { columns } = this.state;\r\n    const { items } = this.props;\r\n    const newColumns = columns.slice();\r\n    const currColumn = newColumns.filter(\r\n      (currCol) => column.key === currCol.key\r\n    )[0];\r\n    newColumns.forEach((newCol) => {\r\n      if (newCol === currColumn) {\r\n        currColumn.isSortedDescending = !currColumn.isSortedDescending;\r\n        currColumn.isSorted = true;\r\n        this.setState({\r\n          announcedMessage: `${currColumn.name} is sorted ${\r\n            currColumn.isSortedDescending ? \"descending\" : \"ascending\"\r\n          }`,\r\n        });\r\n      } else {\r\n        newCol.isSorted = false;\r\n        newCol.isSortedDescending = true;\r\n      }\r\n    });\r\n    const newItems = _copyAndSort(\r\n      items,\r\n      currColumn.fieldName,\r\n      currColumn.isSortedDescending\r\n    );\r\n    this.setState({\r\n      columns: newColumns,\r\n      items: newItems,\r\n    });\r\n  };\r\n}\r\n\r\nfunction _copyAndSort(items, columnKey, isSortedDescending) {\r\n  const key = columnKey;\r\n  return items\r\n    .slice(0)\r\n    .sort((a, b) =>\r\n      (isSortedDescending ? a[key] < b[key] : a[key] > b[key]) ? 1 : -1\r\n    );\r\n}\r\n","C:\\Users\\tobias\\Documents\\dtdiwork\\citer\\src\\app\\components\\ApiModal.js",[],"C:\\Users\\tobias\\Documents\\dtdiwork\\citer\\src\\index.js",[],"C:\\Users\\tobias\\Documents\\dtdiwork\\citer\\src\\reportWebVitals.js",[],["30","31"],{"ruleId":"32","severity":1,"message":"33","line":15,"column":7,"nodeType":"34","messageId":"35","endLine":15,"endColumn":17},{"ruleId":"32","severity":1,"message":"33","line":11,"column":7,"nodeType":"34","messageId":"35","endLine":11,"endColumn":17},{"ruleId":"36","replacedBy":"37"},{"ruleId":"38","replacedBy":"39"},"no-unused-vars","'classNames' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-global-assign","no-unsafe-negation"]