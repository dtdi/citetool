[{"C:\\src\\citetool\\src\\index.js":"1","C:\\src\\citetool\\src\\App.js":"2","C:\\src\\citetool\\src\\reportWebVitals.js":"3","C:\\src\\citetool\\src\\app\\components\\ResultList.js":"4","C:\\src\\citetool\\src\\app\\components\\SearchBar.js":"5","C:\\src\\citetool\\src\\app\\components\\DetailsFrame.js":"6"},{"size":789,"mtime":1609595291562,"results":"7","hashOfConfig":"8"},{"size":2748,"mtime":1609668600685,"results":"9","hashOfConfig":"8"},{"size":375,"mtime":1609595291564,"results":"10","hashOfConfig":"8"},{"size":8116,"mtime":1609668500730,"results":"11","hashOfConfig":"8"},{"size":582,"mtime":1609622430429,"results":"12","hashOfConfig":"8"},{"size":2968,"mtime":1609628233266,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1nlt2up",{"filePath":"17","messages":"18","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"16"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"16"},"C:\\src\\citetool\\src\\index.js",[],["31","32"],"C:\\src\\citetool\\src\\App.js",["33","34","35","36","37"],"import React, { Component } from \"react\";\r\nimport {\r\n  Stack,\r\n  StackItem,\r\n  SearchBox,\r\n  Pivot,\r\n  PivotItem,\r\n  Label,\r\n  Fabric,\r\n  PivotLinkFormat,\r\n  IPivotItemProps,\r\n} from \"@fluentui/react\";\r\n\r\nimport ResultList from \"./app/components/ResultList\";\r\nimport DetailsFrame from \"./app/components/DetailsFrame\";\r\nimport SearchBar from \"./app/components/SearchBar\";\r\nimport header from \"./img/header.jpg\"\r\nimport './style.css'\r\n\r\n\r\nconst labelStyles = {\r\n  root: { marginTop: 10 },\r\n};\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedPaper: null,\r\n    };\r\n  }\r\n\r\n  \r\n\r\n  _onSelectSingle = (elem) => {\r\n    this.setState({\r\n      selectedPaper: elem,\r\n    });\r\n  };\r\n\r\n  _changeListView(){\r\n    console.log(\"Click\")\r\n  }\r\n\r\n  render() {\r\n    const { selectedPaper } = this.state;\r\n    return (\r\n      <Stack>\r\n        <img class=\"header\" src={header} alt=\"Header\" />\r\n        <Stack style={{ zIndex: 1 }}>\r\n          <div class=\"searchbar\">\r\n            <SearchBar className=\"searchbar\" />\r\n          </div>\r\n          <Stack className=\"paperarea\" tokens={{ padding: 10, childrenGap: 5 }}>\r\n            <Stack\r\n              horizontal\r\n              horizontalAlign=\"center\"\r\n              tokens={{ padding: 10, childrenGap: 20 }}\r\n            >\r\n              <StackItem >\r\n                <DetailsFrame selectedPaper={selectedPaper} />\r\n              </StackItem>\r\n              <StackItem className={\"Container\"}>\r\n                <Pivot\r\n                  //aria-labelledby={getTabId(selectedKey)}\r\n                  linkFormat={PivotLinkFormat.tabs}\r\n                  onLinkClick={this._changeListView}\r\n                  //getTabId={getTabId}\r\n                >\r\n                  <PivotItem\r\n                    headerText=\"Results\"\r\n                    //itemCount={42}\r\n                    itemIcon=\"AllApps\"\r\n                    itemKey=\"results\"\r\n                  >\r\n                  </PivotItem>\r\n                  <PivotItem\r\n                    //itemCount={23}\r\n                    headerText=\"Relevant Paper\"\r\n                    itemIcon=\"Accept\"\r\n                    itemkey=\"relevant\"\r\n                  >\r\n                  </PivotItem>\r\n                  <PivotItem\r\n                    //itemCount={23}\r\n                    headerText=\"Not Relevant\"\r\n                    itemIcon=\"StatusCircleErrorX\"\r\n                    itemkey=\"notrelevant\"\r\n                  >\r\n                  </PivotItem>\r\n                </Pivot>\r\n                <ResultList onSelectSingle={this._onSelectSingle} className=\"resultlist\" />\r\n              </StackItem>\r\n            </Stack>\r\n          </Stack>\r\n        </Stack>\r\n      </Stack>\r\n    );\r\n  }\r\n}\r\n","C:\\src\\citetool\\src\\reportWebVitals.js",[],"C:\\src\\citetool\\src\\app\\components\\ResultList.js",["38","39","40"],"import {\r\n  DetailsList,\r\n  MarqueeSelection,\r\n  Selection,\r\n  SelectionMode,\r\n  DetailsListLayoutMode,\r\n  Fabric,\r\n  PeoplePickerItemBase,\r\n} from \"@fluentui/react\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport scopusresult from \"../../data/scopusresult.json\";\r\nimport crossrefresult1 from \"../../data/crossrefresult1.json\";\r\nimport crossrefresult2 from \"../../data/crossrefresult1.json\";\r\nimport semanticscholarresult1 from \"../../data/semanticscholarresult1.json\";\r\nimport semanticscholarresult2 from \"../../data/semanticscholarresult2.json\";\r\nimport semanticscholarresult3 from \"../../data/semanticscholarresult3.json\";\r\nimport semanticscholarresult4 from \"../../data/semanticscholarresult4.json\";\r\nimport semanticscholarresult5 from \"../../data/semanticscholarresult5.json\";\r\nimport semanticscholarresult6 from \"../../data/semanticscholarresult6.json\";\r\nimport semanticscholarresult7 from \"../../data/semanticscholarresult7.json\";\r\n\r\nexport default class ResultList extends Component {\r\n  _selection;\r\n  _allItems = [];\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { onSelectSingle } = this.props;\r\n\r\n    const columns = [\r\n      {\r\n        key: \"column1\",\r\n        name: \"Relevance\",\r\n        fieldName: \"relevance\",\r\n        minWidth: 75,\r\n        maxWidth: 100,\r\n        isRowHeader: true,\r\n        isSorted: true,\r\n        isSortedDescending: true,\r\n        onColumnClick: this._onColumnClick,\r\n        data: \"number\",\r\n        isPadded: true,\r\n      },\r\n      {\r\n        key: \"column2\",\r\n        name: \"Name\",\r\n        fieldName: \"name\",\r\n        minWidth: 300,\r\n        maxWidth: 500,\r\n        sortAscendingAriaLabel: \"Sorted A to Z\",\r\n        sortDescendingAriaLabel: \"Sorted Z to A\",\r\n        onColumnClick: this._onColumnClick,\r\n        data: \"string\",\r\n        isPadded: true,\r\n        isMultiline: true,\r\n      },\r\n      {\r\n        key: \"column3\",\r\n        name: \"Authors\",\r\n        fieldName: \"authors\",\r\n        minWidth: 75,\r\n        maxWidth: 100,\r\n        onColumnClick: this._onColumnClick,\r\n        data: \"string\",\r\n        isPadded: true,\r\n        isMultiline: true,\r\n      },\r\n      {\r\n        key: \"column4\",\r\n        name: \"Year\",\r\n        fieldName: \"year\",\r\n        minWidth: 50,\r\n        maxWidth: 75,\r\n        onColumnClick: this._onColumnClick,\r\n        data: \"string\",\r\n        isPadded: true,\r\n      },\r\n    ];\r\n\r\n    this._selection = new Selection({\r\n      onSelectionChanged: () => {\r\n        const selectionCount = this._selection.getSelectedCount();\r\n        if (selectionCount === 1) {\r\n          onSelectSingle(this._selection.getSelection()[0]);\r\n        }\r\n\r\n        this.setState({\r\n          selectionDetails: this._getSelectionDetails(),\r\n        });\r\n      },\r\n    });\r\n\r\n    this.state = {\r\n      items: this._allItems,\r\n      columns: columns,\r\n      selectionDetails: this._getSelectionDetails(),\r\n      selectedItem: null,\r\n      isModalSelection: false,\r\n      isCompactMode: false,\r\n      announcedMessage: undefined,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._allItems = processSearchResults(scopusresult).slice(0)\r\n    .sort((a, b) =>\r\n      (Number(a[\"relevance\"]) < Number(b[\"relevance\"])) ? 1 : -1\r\n    );;\r\n\r\n    this.setState({\r\n      items: this._allItems,\r\n    });\r\n\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      columns,\r\n      items,\r\n    } = this.state;\r\n\r\n    return (\r\n      <Fabric>\r\n        <MarqueeSelection selection={this._selection}>\r\n          <div overflow=\"scroll\" data-is-scrollable=\"true\">\r\n            <DetailsList\r\n              items={items}\r\n              compact={\"true\"}\r\n              columns={columns}\r\n              selectionMode={SelectionMode.multiple}\r\n              getKey={this._getKey}\r\n              setKey=\"multiple\"\r\n              layoutMode={DetailsListLayoutMode.justified}\r\n              isHeaderVisible={true}\r\n              selection={this._selection}\r\n              selectionPreservedOnEmptyClick={true}\r\n              enterModalSelectionOnTouch={true}\r\n              ariaLabelForSelectionColumn=\"Toggle selection\"\r\n              ariaLabelForSelectAllCheckbox=\"Toggle selection for all items\"\r\n              checkButtonAriaLabel=\"Row checkbox\"\r\n            />\r\n          </div>\r\n        </MarqueeSelection>\r\n      </Fabric>\r\n    );\r\n  }\r\n\r\n  _componentDidUpdate(previousProps, previousState) {\r\n    if (\r\n      previousState.isModalSelection !== this.state.isModalSelection &&\r\n      !this.state.isModalSelection\r\n    ) {\r\n      this._selection.setAllSelected(false);\r\n    }\r\n  }\r\n\r\n  _getKey(item, index) {\r\n    return item.key;\r\n  }\r\n\r\n  _onChangeText = (ev, text) => {\r\n    this.setState({\r\n      items: text\r\n        ? this._allItems.filter((i) => i.name.toLowerCase().indexOf(text) > -1)\r\n        : this._allItems,\r\n    });\r\n  };\r\n\r\n  _getSelectionDetails() {\r\n    const selectionCount = this._selection.getSelectedCount();\r\n\r\n    switch (selectionCount) {\r\n      case 0:\r\n        return \"No items selected\";\r\n      case 1:\r\n        return \"1 item selected: \" + this._selection.getSelection()[0].name;\r\n      default:\r\n        return `${selectionCount} items selected`;\r\n    }\r\n  }\r\n\r\n  _onColumnClick = (ev, column) => {\r\n    const { columns, items } = this.state;\r\n    const newColumns = columns.slice();\r\n    const currColumn = newColumns.filter(\r\n      (currCol) => column.key === currCol.key\r\n    )[0];\r\n    newColumns.forEach((newCol) => {\r\n      if (newCol === currColumn) {\r\n        currColumn.isSortedDescending = !currColumn.isSortedDescending;\r\n        currColumn.isSorted = true;\r\n        this.setState({\r\n          announcedMessage: `${currColumn.name} is sorted ${currColumn.isSortedDescending ? \"descending\" : \"ascending\"\r\n            }`,\r\n        });\r\n      } else {\r\n        newCol.isSorted = false;\r\n        newCol.isSortedDescending = true;\r\n      }\r\n    });\r\n    const newItems = _copyAndSort(\r\n      items,\r\n      currColumn.fieldName,\r\n      currColumn.isSortedDescending\r\n    );\r\n    this.setState({\r\n      columns: newColumns,\r\n      items: newItems,\r\n    });\r\n  };\r\n}\r\n\r\nfunction _copyAndSort(items, columnKey, isSortedDescending) {\r\n  const key = columnKey;\r\n  return items\r\n    .slice(0)\r\n    .sort((a, b) =>\r\n      (isSortedDescending ? a[key] < b[key] : a[key] > b[key]) ? 1 : -1\r\n    );\r\n}\r\n\r\nfunction processSearchResults(scopusresult) {\r\n  const items = [];\r\n  let entries = scopusresult[\"search-results\"].entry;\r\n  //console.log(entries);\r\n  entries.forEach((entry) => {\r\n    \r\n    let abstractlink = \"test\";\r\n    let links = entry[\"link\"];\r\n    links.forEach(((link) => {\r\n      let linktype = link['@ref'];\r\n      if(linktype === \"scopus\"){\r\n        abstractlink = link['@href'];\r\n      }\r\n    }));\r\n\r\n    //API Call for Crossrefresult and semanticscholarresult\r\n\r\n    items.push({\r\n      key: entry[\"dc:identifier\"],\r\n      name: entry[\"dc:title\"],\r\n      abstractlink: abstractlink,\r\n      authors: entry[\"dc:creator\"],\r\n      year: entry[\"prism:coverDate\"].substr(0, 4),\r\n      relevance: (Math.random() * 100).toFixed(2),\r\n      doi: entry[\"prism:doi\"],\r\n      type: entry[\"subtypeDescription\"],\r\n      citedbycount: entry[\"citedby-count\"],\r\n      value: entry,\r\n    });\r\n  });\r\n\r\n  items[0].abstract = semanticscholarresult1[\"abstract\"];\r\n  items[1].abstract = semanticscholarresult2[\"abstract\"];\r\n  items[2].abstract = semanticscholarresult3[\"abstract\"];\r\n  items[3].abstract = semanticscholarresult4[\"abstract\"];\r\n  items[4].abstract = semanticscholarresult5[\"abstract\"];\r\n  items[5].abstract = semanticscholarresult6[\"abstract\"];\r\n  items[6].abstract = semanticscholarresult7[\"abstract\"];\r\n  items[0].references = semanticscholarresult1[\"references\"];\r\n  items[1].references = semanticscholarresult2[\"references\"];\r\n  items[2].references = semanticscholarresult3[\"references\"];\r\n  items[3].references = semanticscholarresult4[\"references\"];\r\n  items[4].references = semanticscholarresult5[\"references\"];\r\n  items[5].references = semanticscholarresult6[\"references\"];\r\n  items[6].references = semanticscholarresult7[\"references\"];\r\n\r\n\r\n  //Hier kann Oli arbeiten\r\n  items[0].olislieblingskpi = \"5\";\r\n  console.log(items);\r\n\r\n  return items;\r\n}\r\n","C:\\src\\citetool\\src\\app\\components\\SearchBar.js",["41"],"import {\r\n    Fabric,\r\n    SearchBox,\r\n    Stack,\r\n    Label,\r\n} from \"@fluentui/react\";\r\nimport React, { Component } from \"react\";\r\n\r\nexport default class PaperFrame extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <Stack>\r\n                <Fabric>\r\n                    <h1 className=\"searchbarlabel\">Potatosearch</h1>\r\n                </Fabric>\r\n                <SearchBox\r\n                    placeholder=\"Search\"\r\n                    onSearch={(newValue) => console.log(\"value is \" + newValue)}\r\n                />\r\n            </Stack>\r\n        );\r\n    }\r\n}","C:\\src\\citetool\\src\\app\\components\\DetailsFrame.js",["42"],"import {\r\n    Stack,\r\n    Fabric,\r\n    DefaultButton,\r\n} from \"@fluentui/react\";\r\nimport React, { Component } from \"react\";\r\n\r\nexport default class DetailsFrame extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    render() {\r\n        const { selectedPaper } = this.props;\r\n        if (!selectedPaper) {\r\n            return null;\r\n        }\r\n        return (\r\n            <div className={\"detailsframe\"}>\r\n                <Stack\r\n                    tokens={{ padding: 20, childrenGap: 5 }}\r\n                >\r\n                    <Fabric>\r\n                        <DefaultButton\r\n                            text=\"To Result List\"\r\n                            iconProps={{ iconName: 'AllApps' }}\r\n                            allowDisabledFocus\r\n                            disabled={false}\r\n                            onClick={this._movePaperToResultList}\r\n                        />\r\n                        <DefaultButton\r\n                            text=\"To Relevant List\"\r\n                            iconProps={{ iconName: 'Accept' }}\r\n                            allowDisabledFocus\r\n                            disabled={false}\r\n                            onClick={this._movePaperToRelevantList}\r\n                        />\r\n                        <DefaultButton\r\n                            text=\"To Not Relevant List\"\r\n                            iconProps={{ iconName: 'StatusCircleErrorX' }}\r\n                            allowDisabledFocus\r\n                            disabled={false}\r\n                            onClick={this._movePaperToNotRelevantList}\r\n                        />\r\n                    </Fabric>\r\n                    <Fabric>\r\n                        <h2>Your selected paper</h2>\r\n                        <p><b>Title:</b> {selectedPaper.name}</p>\r\n                        <p><b>Authors:</b> <i>{selectedPaper.authors}</i></p>\r\n                        <p><b>Abstract:</b> {selectedPaper.abstract}</p>\r\n                        <p><b>Year:</b> {selectedPaper.year} </p>\r\n                        <p><b>DOI:</b> <a href={selectedPaper.abstractlink}>{selectedPaper.doi}</a> </p>\r\n                        <p><b>Type:</b> {selectedPaper.type} </p>\r\n                    </Fabric>\r\n                    <Fabric>\r\n                        <h3>Bibliometrics</h3>\r\n                        <p><b>Relevance Score:</b> {selectedPaper.relevance}</p>\r\n                        <p><b>#Cited-by:</b> {selectedPaper.citedbycount}</p>\r\n                    </Fabric>\r\n                    <Fabric>\r\n                        <h3>Related Information</h3>\r\n                    </Fabric>\r\n                </Stack>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    _movePaperToResultList() {\r\n        console.log(\"_movePaperToResultList\");\r\n    }\r\n\r\n    _movePaperToRelevantList() {\r\n        console.log(\"_movePaperToRelevantList\");\r\n    }\r\n\r\n    _movePaperToNotRelevantList() {\r\n        console.log(\"_movePaperToNotRelevantList\");\r\n    }\r\n}",{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","severity":1,"message":"48","line":5,"column":3,"nodeType":"49","messageId":"50","endLine":5,"endColumn":12},{"ruleId":"47","severity":1,"message":"51","line":8,"column":3,"nodeType":"49","messageId":"50","endLine":8,"endColumn":8},{"ruleId":"47","severity":1,"message":"52","line":9,"column":3,"nodeType":"49","messageId":"50","endLine":9,"endColumn":9},{"ruleId":"47","severity":1,"message":"53","line":11,"column":3,"nodeType":"49","messageId":"50","endLine":11,"endColumn":18},{"ruleId":"47","severity":1,"message":"54","line":21,"column":7,"nodeType":"49","messageId":"50","endLine":21,"endColumn":18},{"ruleId":"47","severity":1,"message":"55","line":8,"column":3,"nodeType":"49","messageId":"50","endLine":8,"endColumn":23},{"ruleId":"47","severity":1,"message":"56","line":13,"column":8,"nodeType":"49","messageId":"50","endLine":13,"endColumn":23},{"ruleId":"47","severity":1,"message":"57","line":14,"column":8,"nodeType":"49","messageId":"50","endLine":14,"endColumn":23},{"ruleId":"47","severity":1,"message":"51","line":5,"column":5,"nodeType":"49","messageId":"50","endLine":5,"endColumn":10},{"ruleId":"58","severity":1,"message":"59","line":9,"column":5,"nodeType":"60","messageId":"61","endLine":11,"endColumn":6},"no-native-reassign",["62"],"no-negated-in-lhs",["63"],"no-unused-vars","'SearchBox' is defined but never used.","Identifier","unusedVar","'Label' is defined but never used.","'Fabric' is defined but never used.","'IPivotItemProps' is defined but never used.","'labelStyles' is assigned a value but never used.","'PeoplePickerItemBase' is defined but never used.","'crossrefresult1' is defined but never used.","'crossrefresult2' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]