{"version":3,"sources":["app/components/ResultList.js","app/components/DetailsFrame.js","img/header.jpg","app/components/ApiModal.js","App.js","index.js"],"names":["ResultList","mergeStyleSets","scrollWrapper","position","height","controlWrapper","display","flexWrap","props","_onColumnClick","ev","column","columns","state","items","newColumns","slice","currColumn","filter","currCol","key","forEach","newCol","isSortedDescending","isSorted","setState","announcedMessage","name","newItems","columnKey","sort","a","b","_copyAndSort","fieldName","onSelectSingle","minWidth","maxWidth","onColumnClick","onRender","item","relevance","toFixed","data","isPadded","sortAscendingAriaLabel","sortDescendingAriaLabel","isMultiline","authors","year","_selection","Selection","onSelectionChanged","getSelectedCount","getSelection","selectedItem","isModalSelection","isCompactMode","this","isLoading","ShimmeredDetailsList","enableShimmer","length","compact","selectionMode","SelectionMode","single","getKey","_getKey","setKey","layoutMode","DetailsListLayoutMode","fixedColumns","isHeaderVisible","selection","selectionPreservedOnEmptyClick","enterModalSelectionOnTouch","ariaLabelForSelectionColumn","ariaLabelForSelectAllCheckbox","checkButtonAriaLabel","index","Component","DetailsFrame","detailsStack","scroller","ShimmerElementsGroup","style","width","shimmerElements","type","ShimmerElementType","line","selectedPaper","onPaperAction","Stack","tokens","childrenGap","horizontal","horizontalAlign","inList","LIST_RESULT","PrimaryButton","text","iconProps","iconName","onClick","LIST_RELEVANT","LIST_NOT_RELEVANT","DefaultButton","Shimmer","isDataLoaded","Text","variant","gap","publication","customElementsGroup","customElements","abstract","Link","target","href","abstractlink","doi","citedByCount","refs","theme","getTheme","ApiModal","isOpen","onClose","apiKey","onApiKeyChange","Modal","isBlocking","containerClassName","contentStyles","container","className","header","IconButton","styles","iconButtonStyles","ariaLabel","body","verticalAlign","TextField","label","value","onChange","flexFlow","alignItems","fonts","xLarge","flex","borderTop","palette","themePrimary","color","neutralPrimary","fontWeight","FontWeights","semibold","padding","overflowY","root","marginLeft","marginTop","marginRight","rootHovered","neutralDark","classNames","paperFrame","background","white","searchBar","PaperCache","prefix","encodeURIComponent","localStorage","getItem","fetch","response","ok","status","json","setItem","JSON","stringify","message","Error","e","console","log","parse","removeItem","App","elem","loadSemScholar","cache","getOrLoad","onLoadData","searchString","query","error","apiError","result","processSearchResults","handleTabLinkClick","selectedTabId","itemKey","newPaper","action","paperList","newList","paper","map","p","oldPaper","find","inBatch","push","paperId","title","cites","raw","ids","author","join","venue","loadSemScholarForMany","getPaperScores","onSettingsOpenClose","isApiKeyModalOpen","newVal","closeMessageBar","searchResultsList","relevantList","notRelevantList","lastSearch","listType","prevProps","prevState","_filterPapers","listItems","_items","disabled","_overflowItems","_farItems","iconOnly","Image","src","alt","SearchBox","placeholder","onSearch","CommandBar","overflowItems","overflowButtonProps","farItems","StackItem","disableShrink","grow","Pivot","selectedKey","onLinkClick","headersOnly","linkFormat","PivotLinkFormat","tabs","PivotItem","itemIcon","headerText","itemCount","ProgressIndicator","description","MessageBar","messageBarType","MessageBarType","onDismiss","dismissButtonAriaLabel","Promise","all","semScholar","references","citations","ref","updatedPaper","entry","link","substr","scopusEntry","papers","matrix","Array","paperIds","i","row","fill","id","idx","indexOf","isRelevant","refs_relevant","refs_pool","cited_relevant","cited_pool","cocit_pool","cocit_relevant","bibcup_pool","bibcup_relevant","m","j","k","relevantKpis","_","poolKpis","poolPoolRefs","Math","max","l","poolPoolCited","poolPoolCocit","poolPoolBibcup","relRelRefs","relRelCited","relRelCocit","relRelBibcup","poolRelRefs","poolRelCited","poolRelCocit","poolRelBibcup","mergeStyles","selectors","margin","initializeIcons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6a4cfcf3.chunk.js","sourcesContent":["import {\r\n  ShimmeredDetailsList,\r\n  Selection,\r\n  SelectionMode,\r\n  DetailsListLayoutMode,\r\n  mergeStyleSets,\r\n} from \"@fluentui/react\";\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nconst classNames = mergeStyleSets({\r\n  scrollWrapper: {\r\n    position: \"relative\",\r\n    height: \"65vh\",\r\n  },\r\n  controlWrapper: {\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  },\r\n});\r\n\r\nexport default class ResultList extends Component {\r\n  _selection;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { onSelectSingle } = this.props;\r\n\r\n    const columns = [\r\n      {\r\n        key: \"column1\",\r\n        name: \"Relevance\",\r\n        fieldName: \"relevance\",\r\n        minWidth: 30,\r\n        maxWidth: 50,\r\n        isSorted: true,\r\n        isSortedDescending: true,\r\n        onColumnClick: this._onColumnClick,\r\n        onRender: (item) => {\r\n          return <span>{(item.relevance * 100).toFixed(2) + \"%\"}</span>;\r\n        },\r\n        data: \"string\",\r\n        isPadded: true,\r\n      },\r\n      {\r\n        key: \"column2\",\r\n        name: \"Name\",\r\n        fieldName: \"name\",\r\n        maxWidth: 350,\r\n        sortAscendingAriaLabel: \"Sorted A to Z\",\r\n        sortDescendingAriaLabel: \"Sorted Z to A\",\r\n        onColumnClick: this._onColumnClick,\r\n        data: \"string\",\r\n        isPadded: true,\r\n        isMultiline: true,\r\n      },\r\n      {\r\n        key: \"column3\",\r\n        name: \"Author/Year\",\r\n        fieldName: \"authors\",\r\n        minWidth: 75,\r\n        maxWidth: 150,\r\n        onColumnClick: this._onColumnClick,\r\n        data: \"string\",\r\n        onRender: (item) => {\r\n          return (\r\n            <span>\r\n              {item.authors} ({item.year})\r\n            </span>\r\n          );\r\n        },\r\n        isPadded: true,\r\n        isMultiline: true,\r\n      },\r\n    ];\r\n\r\n    this._selection = new Selection({\r\n      onSelectionChanged: () => {\r\n        const selectionCount = this._selection.getSelectedCount();\r\n        if (selectionCount === 1) {\r\n          onSelectSingle(this._selection.getSelection()[0]);\r\n        }\r\n      },\r\n    });\r\n\r\n    this.state = {\r\n      announcedMessage: null,\r\n      columns: columns,\r\n      selectedItem: null,\r\n      isModalSelection: false,\r\n      isCompactMode: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { columns } = this.state;\r\n\r\n    const { items, isLoading } = this.props;\r\n\r\n    return (\r\n      <ShimmeredDetailsList\r\n        items={items}\r\n        enableShimmer={isLoading || items.length === 0}\r\n        compact={false}\r\n        onColumnClick={this._onColumnClick}\r\n        columns={columns}\r\n        selectionMode={SelectionMode.single}\r\n        getKey={this._getKey}\r\n        setKey=\"multiple\"\r\n        layoutMode={DetailsListLayoutMode.fixedColumns}\r\n        isHeaderVisible={true}\r\n        selection={this._selection}\r\n        selectionPreservedOnEmptyClick={true}\r\n        enterModalSelectionOnTouch={true}\r\n        ariaLabelForSelectionColumn=\"Toggle selection\"\r\n        ariaLabelForSelectAllCheckbox=\"Toggle selection for all items\"\r\n        checkButtonAriaLabel=\"Row checkbox\"\r\n      />\r\n    );\r\n  }\r\n\r\n  _getKey(item, index) {\r\n    return item ? item.key : index;\r\n  }\r\n\r\n  _onColumnClick = (ev, column) => {\r\n    const { columns } = this.state;\r\n    const { items } = this.props;\r\n    const newColumns = columns.slice();\r\n    const currColumn = newColumns.filter(\r\n      (currCol) => column.key === currCol.key\r\n    )[0];\r\n    newColumns.forEach((newCol) => {\r\n      if (newCol === currColumn) {\r\n        currColumn.isSortedDescending = !currColumn.isSortedDescending;\r\n        currColumn.isSorted = true;\r\n        this.setState({\r\n          announcedMessage: `${currColumn.name} is sorted ${\r\n            currColumn.isSortedDescending ? \"descending\" : \"ascending\"\r\n          }`,\r\n        });\r\n      } else {\r\n        newCol.isSorted = false;\r\n        newCol.isSortedDescending = true;\r\n      }\r\n    });\r\n    const newItems = _copyAndSort(\r\n      items,\r\n      currColumn.fieldName,\r\n      currColumn.isSortedDescending\r\n    );\r\n    this.setState({\r\n      columns: newColumns,\r\n      items: newItems,\r\n    });\r\n  };\r\n}\r\n\r\nfunction _copyAndSort(items, columnKey, isSortedDescending) {\r\n  const key = columnKey;\r\n  return items\r\n    .slice(0)\r\n    .sort((a, b) =>\r\n      (isSortedDescending ? a[key] < b[key] : a[key] > b[key]) ? 1 : -1\r\n    );\r\n}\r\n","import {\r\n  Stack,\r\n  DefaultButton,\r\n  PrimaryButton,\r\n  mergeStyleSets,\r\n  Link,\r\n  Shimmer,\r\n  ShimmerElementsGroup,\r\n  ShimmerElementType,\r\n  Text,\r\n} from \"@fluentui/react\";\r\nimport React, { Component } from \"react\";\r\nimport { LIST_NOT_RELEVANT, LIST_RELEVANT, LIST_RESULT } from \"../../App\";\r\n\r\nconst classNames = mergeStyleSets({\r\n  detailsStack: {\r\n    height: \"80vh\",\r\n  },\r\n  scrollWrapper: {\r\n    position: \"relative\",\r\n    height: \"40vh\",\r\n  },\r\n  scroller: {},\r\n});\r\nexport default class DetailsFrame extends Component {\r\n  customElements() {\r\n    return (\r\n      <ShimmerElementsGroup\r\n        flexWrap\r\n        style\r\n        width=\"100%\"\r\n        shimmerElements={[\r\n          { type: ShimmerElementType.line },\r\n          { type: ShimmerElementType.line },\r\n          { type: ShimmerElementType.line },\r\n          { type: ShimmerElementType.line },\r\n          { type: ShimmerElementType.line },\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    const { selectedPaper, onPaperAction, isLoading } = this.props;\r\n    if (!selectedPaper) {\r\n      return (\r\n        <Stack>\r\n          <Text>Howdy, Partner! Try to start from a search result!</Text>\r\n        </Stack>\r\n      );\r\n    }\r\n    return (\r\n      <Stack tokens={{ childrenGap: 5 }}>\r\n        <Stack\r\n          horizontal\r\n          horizontalAlign={\"space-evenly\"}\r\n          tokens={{ childrenGap: 5 }}\r\n        >\r\n          {selectedPaper.inList !== LIST_RESULT && (\r\n            <PrimaryButton\r\n              text=\"Back to Pool\"\r\n              iconProps={{ iconName: \"RevToggleKey\" }}\r\n              onClick={() => {\r\n                onPaperAction(selectedPaper, \"move-to-result\");\r\n              }}\r\n            />\r\n          )}\r\n          {selectedPaper.inList !== LIST_RELEVANT && (\r\n            <PrimaryButton\r\n              text=\"Mark relevant\"\r\n              iconProps={{ iconName: \"Accept\" }}\r\n              onClick={() => {\r\n                onPaperAction(selectedPaper, \"move-to-relevant\");\r\n              }}\r\n            />\r\n          )}\r\n          {selectedPaper.inList !== LIST_NOT_RELEVANT && (\r\n            <DefaultButton\r\n              text=\"Mark not relevant\"\r\n              iconProps={{ iconName: \"StatusCircleErrorX\" }}\r\n              onClick={() => {\r\n                onPaperAction(selectedPaper, \"move-to-not-relevant\");\r\n              }}\r\n            />\r\n          )}\r\n        </Stack>\r\n\r\n        <Shimmer\r\n          shimmerElements={[{ type: ShimmerElementType.line, height: 22 }]}\r\n          width={\"80%\"}\r\n          isDataLoaded={!isLoading}\r\n        >\r\n          <Text variant={\"mediumPlus\"}>{selectedPaper.name}</Text>\r\n        </Shimmer>\r\n        <Shimmer\r\n          shimmerElements={[\r\n            { type: ShimmerElementType.line, width: \"15%\" },\r\n            { type: ShimmerElementType.gap, width: 10 },\r\n            { type: ShimmerElementType.line, width: \"80%\" },\r\n          ]}\r\n          width={\"60%\"}\r\n          isDataLoaded={!isLoading}\r\n        >\r\n          <Text>\r\n            <b>Authors:</b> <i>{selectedPaper.authors}</i>\r\n          </Text>\r\n        </Shimmer>\r\n        <Shimmer\r\n          isDataLoaded={!isLoading}\r\n          shimmerElements={[\r\n            { type: ShimmerElementType.line, width: \"5%\" },\r\n            { type: ShimmerElementType.gap, width: 10 },\r\n            { type: ShimmerElementType.line, width: \"90%\" },\r\n          ]}\r\n        >\r\n          <Text>\r\n            <b>In:</b> <i>{selectedPaper.publication}</i>\r\n          </Text>\r\n        </Shimmer>\r\n\r\n        <Shimmer\r\n          customElementsGroup={this.customElements()}\r\n          isDataLoaded={!isLoading}\r\n        >\r\n          <Text>{selectedPaper.abstract}</Text>\r\n        </Shimmer>\r\n\r\n        <Stack\r\n          horizontal\r\n          horizontalAlign=\"space-between\"\r\n          tokens={{ childrenGap: 5 }}\r\n        >\r\n          <Text>\r\n            <b>Year:</b> {selectedPaper.year}\r\n          </Text>\r\n          <Text>\r\n            <b>Type:</b> {selectedPaper.type}\r\n          </Text>\r\n          <Text>\r\n            <b>DOI:</b>{\" \"}\r\n            <Link target={\"_blank\"} href={selectedPaper.abstractlink}>\r\n              {selectedPaper.doi}\r\n            </Link>\r\n          </Text>\r\n        </Stack>\r\n        <Stack\r\n          horizontal\r\n          horizontalAlign=\"space-between\"\r\n          tokens={{ childrenGap: 10 }}\r\n        >\r\n          <Text>\r\n            <b>Relevance Score:</b>{\" \"}\r\n            {(selectedPaper.relevance * 100).toFixed(2) + \"%\"}\r\n          </Text>\r\n          <Text>\r\n            <b>#Cited-by:</b> {selectedPaper.citedByCount}\r\n          </Text>\r\n          <Text>\r\n            <b>#References:</b> {selectedPaper.refs.length}\r\n          </Text>\r\n        </Stack>\r\n      </Stack>\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/header.56f2f34e.jpg\";","import {\r\n  Modal,\r\n  IconButton,\r\n  Stack,\r\n  Text,\r\n  TextField,\r\n  mergeStyleSets,\r\n  getTheme,\r\n  Link,\r\n  FontWeights,\r\n  PrimaryButton,\r\n} from \"@fluentui/react\";\r\n\r\nconst theme = getTheme();\r\n\r\nexport default function ApiModal(props) {\r\n  const { isOpen, onClose, apiKey, onApiKeyChange } = props;\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      isBlocking={false}\r\n      containerClassName={contentStyles.container}\r\n    >\r\n      <div className={contentStyles.header}>\r\n        <Text>Welcome to Potatosearch</Text>\r\n        <IconButton\r\n          styles={iconButtonStyles}\r\n          iconProps={{ iconName: \"Cancel\" }}\r\n          ariaLabel=\"Close popup modal\"\r\n          onClick={onClose}\r\n        />\r\n      </div>\r\n      <div className={contentStyles.body}>\r\n        <Stack tokens={{ childrenGap: 5 }}>\r\n          <Text variant=\"mediumPlus\">\r\n            This website helps to discover exciting new papers in three easy\r\n            steps:\r\n          </Text>\r\n          <Text>\r\n            <ol>\r\n              <li>\r\n                To get started, use the search box above to start a search query\r\n                on Scopus.\r\n              </li>\r\n              <li>\r\n                Based on the results, we suggest relevant papers on the left,\r\n                which you can mark as relevant or irrelevant using the buttons\r\n                at the top. Your vote will automatically move the paper to the\r\n                lists on the right side of the page. Based on the papers you\r\n                rated as relevant, we will suggest new papers to rate. For this\r\n                purpose, we use bibliometric data (i.e., co-citation &\r\n                bibliometric coupling) to find papers that have a particularly\r\n                high overlap with your selection.\r\n              </li>\r\n              <li>\r\n                If you have identified enough papers or if our suggestions do\r\n                not contain any more relevant papers, use the download function\r\n                in the header to export your results as a list.\r\n              </li>\r\n            </ol>\r\n          </Text>\r\n          <Text variant=\"mediumPlus\">\r\n            Before you start: Please provide your Scopus API-Key:\r\n          </Text>\r\n          <Link\r\n            href=\"https://github.com/dtdi/citetool/wiki/API-Key\"\r\n            target=\"_blank\"\r\n          >\r\n            Read here, how to obtain and configure your api key.\r\n          </Link>\r\n          <Stack horizontal verticalAlign=\"end\" tokens={{ childrenGap: 10 }}>\r\n            <TextField\r\n              label=\"Provide in your API Code\"\r\n              style={{ width: 300 }}\r\n              value={apiKey}\r\n              onChange={onApiKeyChange}\r\n            />\r\n            <PrimaryButton onClick={onClose}>Save</PrimaryButton>\r\n          </Stack>\r\n        </Stack>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\nconst contentStyles = mergeStyleSets({\r\n  container: {\r\n    display: \"flex\",\r\n    flexFlow: \"column nowrap\",\r\n    alignItems: \"stretch\",\r\n    width: \"1000px\",\r\n    maxWidth: \"100%\",\r\n  },\r\n  header: [\r\n    theme.fonts.xLarge,\r\n    {\r\n      flex: \"1 1 auto\",\r\n      borderTop: `4px solid ${theme.palette.themePrimary}`,\r\n      color: theme.palette.neutralPrimary,\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      fontWeight: FontWeights.semibold,\r\n      padding: \"12px 12px 14px 24px\",\r\n    },\r\n  ],\r\n  body: {\r\n    flex: \"4 4 auto\",\r\n    padding: \"0 24px 24px 24px\",\r\n    overflowY: \"hidden\",\r\n  },\r\n});\r\n\r\nconst iconButtonStyles = {\r\n  root: {\r\n    color: theme.palette.neutralPrimary,\r\n    marginLeft: \"auto\",\r\n    marginTop: \"4px\",\r\n    marginRight: \"2px\",\r\n  },\r\n  rootHovered: {\r\n    color: theme.palette.neutralDark,\r\n  },\r\n};\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Stack,\r\n  StackItem,\r\n  CommandBar,\r\n  Pivot,\r\n  PivotItem,\r\n  Image,\r\n  mergeStyleSets,\r\n  Text,\r\n  SearchBox,\r\n  PivotLinkFormat,\r\n  ProgressIndicator,\r\n  Link,\r\n  MessageBar,\r\n  MessageBarType,\r\n  getTheme,\r\n} from \"@fluentui/react\";\r\n\r\n// import result from \"./data/scopusresult.json\";\r\n\r\nimport ResultList from \"./app/components/ResultList\";\r\nimport DetailsFrame from \"./app/components/DetailsFrame\";\r\nimport header from \"./img/header.jpg\";\r\nimport \"./style.css\";\r\n\r\nimport ApiModal from \"./app/components/ApiModal\";\r\n\r\nconst theme = getTheme();\r\nconst classNames = mergeStyleSets({\r\n  paperFrame: {\r\n    width: \"40vw\",\r\n    padding: 20,\r\n    background: theme.palette.white,\r\n  },\r\n  searchBar: {\r\n    background: theme.palette.white,\r\n  },\r\n});\r\n\r\nexport const LIST_RESULT = \"result\";\r\nexport const LIST_RELEVANT = \"relevant\";\r\nexport const LIST_NOT_RELEVANT = \"not-relevant\";\r\n\r\nclass PaperCache {\r\n  prefix = \"paper_\";\r\n\r\n  _getKey(doi) {\r\n    return this.prefix + encodeURIComponent(doi);\r\n  }\r\n\r\n  async getOrLoad(doi) {\r\n    const key = this._getKey(doi);\r\n    const item = localStorage.getItem(key);\r\n    if (!item) {\r\n      const response = await fetch(\r\n        `https://api.semanticscholar.org/v1/paper/${doi}?include_unknown_references=true`\r\n      );\r\n\r\n      if (!response.ok) {\r\n        if (response.status === 404) {\r\n          const body = await response.json();\r\n          localStorage.setItem(key, JSON.stringify(body));\r\n          return body;\r\n        } else {\r\n          const message = `An error has occured: ${response.status}`;\r\n          throw new Error(message);\r\n        }\r\n      }\r\n\r\n      const body = await response.json();\r\n      try {\r\n        localStorage.setItem(key, JSON.stringify(body));\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n      return body;\r\n    } else return JSON.parse(item);\r\n  }\r\n\r\n  remove(doi) {\r\n    localStorage.removeItem(this._getKey(doi));\r\n  }\r\n}\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      paperList: [],\r\n      selectedPaper: null,\r\n      searchResultsList: [],\r\n      relevantList: [],\r\n      notRelevantList: [],\r\n      selectedTabId: \"searchResultsList\",\r\n      apiKey: \"\",\r\n      isApiKeyModalOpen: true,\r\n      isLoading: false,\r\n      searchString: \"\",\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const lastSearch = JSON.parse(localStorage.getItem(\"lastSearch\"));\r\n    const apiKey = localStorage.getItem(\"apiKey\");\r\n    if (apiKey) {\r\n      this.setState({\r\n        apiKey: apiKey,\r\n        isApiKeyModalOpen: false,\r\n      });\r\n    }\r\n    if (lastSearch) {\r\n      this.setState({ isLoading: true, searchString: lastSearch.searchString });\r\n      await this.processSearchResults(lastSearch.result);\r\n      this.setState({ isLoading: false });\r\n    }\r\n  }\r\n\r\n  _filterPapers(listType) {\r\n    const { paperList } = this.state;\r\n    return paperList.filter((paper) => {\r\n      return paper.inList === listType;\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.paperList !== this.state.paperList) {\r\n      this.setState({\r\n        searchResultsList: this._filterPapers(LIST_RESULT),\r\n        relevantList: this._filterPapers(LIST_RELEVANT),\r\n        notRelevantList: this._filterPapers(LIST_NOT_RELEVANT),\r\n      });\r\n    }\r\n  }\r\n\r\n  onSelectSingle = async (elem) => {\r\n    this.setState({\r\n      selectedPaper: elem,\r\n    });\r\n  };\r\n\r\n  loadSemScholar = async (doi) => {\r\n    let cache = new PaperCache();\r\n    const item = await cache.getOrLoad(doi);\r\n    return item;\r\n  };\r\n\r\n  onLoadData = async (searchString) => {\r\n    this.setState({\r\n      isLoading: true,\r\n      selectedPaper: null,\r\n      searchString: searchString,\r\n    });\r\n    const { apiKey } = this.state;\r\n    const query = `all(\"${searchString}\")`;\r\n\r\n    try {\r\n      const response = await fetch(\r\n        `https://api.elsevier.com/content/search/scopus?apiKey=${apiKey}&query=${query}&count=25&start=0`\r\n      );\r\n      if (!response.ok) {\r\n        const error = `An error has occured: ${response.status}`;\r\n        this.setState({\r\n          isLoading: false,\r\n          apiError: error,\r\n        });\r\n      }\r\n      const body = await response.json();\r\n\r\n      localStorage.setItem(\r\n        \"lastSearch\",\r\n        JSON.stringify({ searchString: this.state.searchString, result: body })\r\n      );\r\n      await this.processSearchResults(body);\r\n      this.setState({\r\n        isLoading: false,\r\n      });\r\n    } catch (e) {\r\n      this.setState({\r\n        isLoading: false,\r\n        apiError: e.message,\r\n      });\r\n    }\r\n  };\r\n\r\n  handleTabLinkClick = (item) => {\r\n    this.setState({\r\n      selectedTabId: item.props.itemKey,\r\n    });\r\n  };\r\n\r\n  onPaperAction = async (newPaper, action) => {\r\n    const { paperList } = this.state;\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    let newList = paperList\r\n      .filter((paper) => {\r\n        return action !== \"remove-paper\" || newPaper.key !== paper.key;\r\n      })\r\n      .map((paper) => {\r\n        if (paper.key === newPaper.key) {\r\n          if (action === \"move-to-result\") {\r\n            newPaper.inList = LIST_RESULT;\r\n          } else if (action === \"move-to-relevant\") {\r\n            newPaper.inList = LIST_RELEVANT;\r\n          } else if (action === \"move-to-not-relevant\") {\r\n            newPaper.inList = LIST_NOT_RELEVANT;\r\n          } else if (action === \"update-paper\") {\r\n          }\r\n\r\n          const updatedPaper = {\r\n            ...paper,\r\n            ...newPaper,\r\n          };\r\n          return updatedPaper;\r\n        }\r\n        return paper;\r\n      });\r\n\r\n    if (action === \"move-to-relevant\") {\r\n      newPaper.refs.forEach((p) => {\r\n        const oldPaper = newList.find((oldPaper) => oldPaper.doi === p.doi);\r\n        if (oldPaper) {\r\n          oldPaper.inBatch.push(newPaper.doi);\r\n        } else {\r\n          newList.push({\r\n            key: p.doi || p.paperId,\r\n            name: p.title,\r\n            abstract: null,\r\n            refs: [],\r\n            cites: [],\r\n            raw: {},\r\n            ids: [],\r\n            authors: p.authors\r\n              ? p.authors.map((author) => author.name).join(\", \")\r\n              : \"\",\r\n            publication: p.venue,\r\n            year: p.year,\r\n            doi: p.doi,\r\n            type: null,\r\n            citedByCount: null,\r\n            inBatch: [newPaper.doi],\r\n            inList: LIST_RESULT,\r\n          });\r\n        }\r\n      });\r\n      newList = await this.loadSemScholarForMany(newList);\r\n    }\r\n\r\n    newList = this.getPaperScores(newList);\r\n    this.setState({\r\n      paperList: newList.sort((a, b) => b.relevance - a.relevance),\r\n      isLoading: false,\r\n    });\r\n  };\r\n\r\n  onSettingsOpenClose = () => {\r\n    const { isApiKeyModalOpen, apiKey } = this.state;\r\n    if (apiKey) {\r\n      localStorage.setItem(\"apiKey\", apiKey);\r\n      this.setState({\r\n        isApiKeyModalOpen: !isApiKeyModalOpen,\r\n      });\r\n    } else {\r\n      const error = \"api key not provided.\";\r\n      this.setState(error);\r\n    }\r\n  };\r\n\r\n  onApiKeyChange = (ev, newVal) => {\r\n    this.setState({ apiKey: newVal });\r\n  };\r\n\r\n  closeMessageBar = (ev) => {\r\n    this.setState({ apiError: null });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      selectedPaper,\r\n      searchResultsList,\r\n      searchString,\r\n      relevantList,\r\n      notRelevantList,\r\n      selectedTabId,\r\n      isApiKeyModalOpen,\r\n      apiKey,\r\n      isLoading,\r\n      apiError,\r\n    } = this.state;\r\n\r\n    let listItems;\r\n\r\n    switch (selectedTabId) {\r\n      case \"searchResultsList\":\r\n        listItems = searchResultsList;\r\n        break;\r\n      case \"relevantList\":\r\n        listItems = relevantList;\r\n        break;\r\n      case \"notRelevantList\":\r\n        listItems = notRelevantList;\r\n        break;\r\n      default:\r\n        listItems = searchResultsList;\r\n        break;\r\n    }\r\n\r\n    const _items = [\r\n      {\r\n        key: \"upload\",\r\n        text: \"Upload\",\r\n        disabled: true,\r\n        iconProps: { iconName: \"Upload\" },\r\n        href: \"https://developer.microsoft.com/en-us/fluentui\",\r\n      },\r\n      {\r\n        key: \"share\",\r\n        text: \"Share\",\r\n        disabled: true,\r\n        iconProps: { iconName: \"Share\" },\r\n        onClick: () => console.log(\"Share\"),\r\n      },\r\n      {\r\n        key: \"download\",\r\n        text: \"Download\",\r\n        disabled: true,\r\n        iconProps: { iconName: \"Download\" },\r\n        onClick: () => console.log(\"Download\"),\r\n      },\r\n    ];\r\n\r\n    const _overflowItems = [\r\n      {\r\n        key: \"move\",\r\n        text: \"Move to...\",\r\n        disabled: true,\r\n        onClick: () => console.log(\"Move to\"),\r\n        iconProps: { iconName: \"MoveToFolder\" },\r\n      },\r\n      {\r\n        key: \"copy\",\r\n        text: \"Copy to...\",\r\n        disabled: true,\r\n        onClick: () => console.log(\"Copy to\"),\r\n        iconProps: { iconName: \"Copy\" },\r\n      },\r\n      {\r\n        key: \"rename\",\r\n        text: \"Rename...\",\r\n        disabled: true,\r\n        onClick: () => console.log(\"Rename\"),\r\n        iconProps: { iconName: \"Edit\" },\r\n      },\r\n    ];\r\n\r\n    const _farItems = [\r\n      {\r\n        key: \"settings\",\r\n        text: \"Help & Settings\",\r\n        // This needs an ariaLabel since it's icon-only\r\n        ariaLabel: \"Help & Settings\",\r\n        iconOnly: true,\r\n        iconProps: { iconName: \"Settings\" },\r\n        onClick: this.onSettingsOpenClose,\r\n      },\r\n      {\r\n        key: \"info\",\r\n        text: \"Info\",\r\n        // This needs an ariaLabel since it's icon-only\r\n        ariaLabel: \"Info\",\r\n        iconOnly: true,\r\n        iconProps: { iconName: \"Info\" },\r\n        onClick: () => console.log(\"Info\"),\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <>\r\n        <ApiModal\r\n          isOpen={isApiKeyModalOpen}\r\n          apiKey={apiKey}\r\n          onApiKeyChange={this.onApiKeyChange}\r\n          onClose={this.onSettingsOpenClose}\r\n        />\r\n        <Stack tokens={{ padding: 25, childrenGap: 20 }}>\r\n          <Image className=\"header\" src={header} alt=\"Header\" />\r\n\r\n          <Stack\r\n            horizontal\r\n            horizontalAlign={\"space-around\"}\r\n            verticalAlign={\"center\"}\r\n            tokens={{ childrenGap: 20 }}\r\n            className={classNames.searchBar}\r\n          >\r\n            <Text style={{ fontWeight: \"bolder\" }}>Potatosearch</Text>\r\n            <SearchBox\r\n              styles={{ root: { width: 400 } }}\r\n              placeholder=\"Search\"\r\n              onSearch={this.onLoadData}\r\n              value={searchString}\r\n            />\r\n            <CommandBar\r\n              items={_items}\r\n              overflowItems={_overflowItems}\r\n              overflowButtonProps={{ ariaLabel: \"More Comands\" }}\r\n              farItems={_farItems}\r\n              ariaLabel=\"Use left and right arrow keys to navigate between commands\"\r\n            />\r\n          </Stack>\r\n          <Stack className=\"\" tokens={{ childrenGap: 5 }}>\r\n            <Stack\r\n              horizontal\r\n              horizontalAlign=\"space-evenly\"\r\n              tokens={{ childrenGap: 10 }}\r\n            >\r\n              <StackItem disableShrink className={classNames.paperFrame}>\r\n                <DetailsFrame\r\n                  isLoading={isLoading}\r\n                  selectedPaper={selectedPaper}\r\n                  onPaperAction={this.onPaperAction}\r\n                />\r\n              </StackItem>\r\n              <StackItem grow={2} className={classNames.paperFrame}>\r\n                <Stack tokens={{ childrenGap: 5 }}>\r\n                  <Pivot\r\n                    selectedKey={selectedTabId}\r\n                    onLinkClick={this.handleTabLinkClick}\r\n                    headersOnly={true}\r\n                    linkFormat={PivotLinkFormat.tabs}\r\n                  >\r\n                    <PivotItem\r\n                      itemKey={\"searchResultsList\"}\r\n                      itemIcon=\"AllApps\"\r\n                      headerText=\"Paper Pool\"\r\n                      itemCount={searchResultsList.length}\r\n                    ></PivotItem>\r\n                    <PivotItem\r\n                      itemKey={\"relevantList\"}\r\n                      itemIcon=\"Accept\"\r\n                      headerText=\"Relevant Paper\"\r\n                      itemCount={relevantList.length}\r\n                    ></PivotItem>\r\n                    <PivotItem\r\n                      itemKey={\"notRelevantList\"}\r\n                      itemIcon=\"StatusCircleErrorX\"\r\n                      headerText=\"Not Relevant\"\r\n                      itemCount={notRelevantList.length}\r\n                    ></PivotItem>\r\n                  </Pivot>\r\n                  {isLoading && (\r\n                    <ProgressIndicator\r\n                      label=\"We're Loading\"\r\n                      description=\"Lots of data from semantic Scholar\"\r\n                    />\r\n                  )}\r\n                  {apiError && (\r\n                    <MessageBar\r\n                      messageBarType={MessageBarType.error}\r\n                      isMultiline={false}\r\n                      onDismiss={this.closeMessageBar}\r\n                      dismissButtonAriaLabel=\"Close\"\r\n                    >\r\n                      {apiError}\r\n                      <Link\r\n                        href=\"https://github.com/dtdi/citetool/wiki/API-Key\"\r\n                        target=\"_blank\"\r\n                      >\r\n                        Did you provide your API Key?\r\n                      </Link>\r\n                    </MessageBar>\r\n                  )}\r\n                  <ResultList\r\n                    items={listItems}\r\n                    isLoading={isLoading}\r\n                    onSelectSingle={this.onSelectSingle}\r\n                  />\r\n                </Stack>\r\n              </StackItem>\r\n            </Stack>\r\n          </Stack>\r\n        </Stack>\r\n      </>\r\n    );\r\n  }\r\n\r\n  async loadSemScholarForMany(items) {\r\n    items = await Promise.all(\r\n      items.map(async (paper) => {\r\n        const semScholar = await this.loadSemScholar(paper.doi);\r\n\r\n        const newPaper = {\r\n          abstract: semScholar.abstract,\r\n          refs: semScholar.references || [],\r\n          cites: semScholar.citations || [],\r\n          authors: semScholar.authors\r\n            ? semScholar.authors.map((author) => author.name).join(\", \")\r\n            : paper.authors,\r\n          ids: semScholar.references\r\n            ? semScholar.references.map((ref) => {\r\n                return ref.doi || ref.paperId;\r\n              })\r\n            : [],\r\n        };\r\n\r\n        const updatedPaper = {\r\n          ...paper,\r\n          ...newPaper,\r\n        };\r\n        updatedPaper.raw.semScholar = semScholar;\r\n\r\n        return updatedPaper;\r\n      })\r\n    );\r\n    return items;\r\n  }\r\n\r\n  async processSearchResults(result) {\r\n    let items = [];\r\n    const entries = result[\"search-results\"].entry;\r\n\r\n    entries.forEach((entry) => {\r\n      let abstractlink = \"test\";\r\n      let links = entry[\"link\"];\r\n      links.forEach((link) => {\r\n        let linktype = link[\"@ref\"];\r\n        if (linktype === \"scopus\") {\r\n          abstractlink = link[\"@href\"];\r\n        }\r\n      });\r\n\r\n      items.push({\r\n        key: entry[\"prism:doi\"] || entry[\"dc:identifier\"],\r\n        name: entry[\"dc:title\"],\r\n        abstractlink: abstractlink,\r\n        abstract: null,\r\n        refs: [],\r\n        cites: [],\r\n        ids: [],\r\n        authors: entry[\"dc:creator\"], // @todo: replace with full list of authors.\r\n        publication: `${entry[\"prism:publicationName\"]} ${entry[\"prism:volume\"]}`,\r\n        year: entry[\"prism:coverDate\"].substr(0, 4),\r\n        doi: entry[\"prism:doi\"],\r\n        type: entry[\"subtypeDescription\"],\r\n        citedByCount: entry[\"citedby-count\"],\r\n        inBatch: [this.state.searchString],\r\n        raw: {\r\n          scopusEntry: entry,\r\n          semScholar: null,\r\n        },\r\n        inList: LIST_RESULT,\r\n      });\r\n    });\r\n\r\n    items = await this.loadSemScholarForMany(items);\r\n\r\n    items = this.getPaperScores(items);\r\n    items = items.sort((a, b) => b.relevance - a.relevance);\r\n\r\n    this.setState({\r\n      paperList: items,\r\n      isLoading: false,\r\n    });\r\n    this.onSelectSingle(items[0]);\r\n  }\r\n\r\n  getPaperScores(papers) {\r\n    //Build matrix (Step1) -> direct references.\r\n    /** @description matrix for direct references */\r\n    let matrix = new Array(papers.length);\r\n    const paperIds = papers.map((paper) => paper.doi);\r\n    papers.forEach((paper, i) => {\r\n      let row = new Array(papers.length).fill(0);\r\n      paper.ids.forEach((id) => {\r\n        let idx = paperIds.indexOf(id);\r\n        if (idx !== -1) row[idx] = 1;\r\n      });\r\n      matrix[i] = row;\r\n    });\r\n\r\n    /** @description Lookup-Array - determines whether a paper is in list relevant or not. */\r\n    let isRelevant = papers.map((paper) => paper.inList === LIST_RELEVANT);\r\n\r\n    /**\r\n     * summarize all citations within the set of papers\r\n     */\r\n\r\n    papers = papers.map((p) => {\r\n      return {\r\n        ...p,\r\n        ...{\r\n          refs_relevant: 0,\r\n          refs_pool: 0,\r\n          cited_relevant: 0,\r\n          cited_pool: 0,\r\n          cocit_pool: 0,\r\n          cocit_relevant: 0,\r\n          bibcup_pool: 0,\r\n          bibcup_relevant: 0,\r\n        },\r\n      };\r\n    });\r\n\r\n    const m = {};\r\n\r\n    // each paper\r\n    for (let i = 0; i < papers.length; i++) {\r\n      // each column\r\n      for (let j = 0; j < papers.length; j++) {\r\n        //Referencing Count - a)\r\n        if (matrix[i][j] === 1) {\r\n          if (isRelevant[j]) {\r\n            papers[i].refs_relevant++;\r\n          } else {\r\n            papers[i].refs_pool++;\r\n          }\r\n        }\r\n        //Referenced Count - b)\r\n        if (matrix[j][i] === 1) {\r\n          if (isRelevant[j]) {\r\n            papers[i].cited_relevant++;\r\n          } else {\r\n            papers[i].cited_pool++;\r\n          }\r\n        }\r\n        // each row\r\n        for (let k = 0; k < papers.length; k++) {\r\n          // cocitation: how often has a paper been co-cited? - c)\r\n          if (matrix[j][i] === 1 && matrix[j][k] === 1 && i !== k) {\r\n            if (isRelevant[k]) {\r\n              papers[i].cocit_relevant++;\r\n            } else {\r\n              papers[i].cocit_pool++;\r\n            }\r\n          }\r\n          // bibcoupling: - d)\r\n          if (matrix[i][j] === 1 && matrix[k][j] === 1 && i !== k) {\r\n            if (isRelevant[k]) {\r\n              papers[i].bibcup_relevant++;\r\n            } else {\r\n              papers[i].bibcup_pool++;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const relevantKpis = papers.filter((_, i) => isRelevant[i]);\r\n    const poolKpis = papers.filter((_, i) => !isRelevant[i]);\r\n\r\n    m.poolPoolRefs = Math.max(1, ...poolKpis.map((l) => l.refs_pool));\r\n    m.poolPoolCited = Math.max(1, ...poolKpis.map((l) => l.cited_pool));\r\n    m.poolPoolCocit = Math.max(1, ...poolKpis.map((l) => l.cocit_pool));\r\n    m.poolPoolBibcup = Math.max(1, ...poolKpis.map((l) => l.bibcup_pool));\r\n\r\n    m.relRelRefs = Math.max(1, ...relevantKpis.map((l) => l.refs_relevant));\r\n    m.relRelCited = Math.max(1, ...relevantKpis.map((l) => l.cited_relevant));\r\n    m.relRelCocit = Math.max(1, ...relevantKpis.map((l) => l.cocit_relevant));\r\n    m.relRelBibcup = Math.max(1, ...relevantKpis.map((l) => l.bibcup_relevant));\r\n\r\n    m.poolRelRefs = Math.max(1, ...poolKpis.map((l) => l.refs_relevant));\r\n    m.poolRelCited = Math.max(1, ...poolKpis.map((l) => l.cited_relevant));\r\n    m.poolRelCocit = Math.max(1, ...poolKpis.map((l) => l.cocit_relevant));\r\n    m.poolRelBibcup = Math.max(1, ...poolKpis.map((l) => l.bibcup_relevant));\r\n\r\n    papers.forEach((paper, i) => {\r\n      if (isRelevant[i]) {\r\n        paper.refs_relevant /= m.relRelRefs;\r\n        paper.cited_relevant /= m.relRelCited;\r\n        paper.cocit_relevant /= m.relRelCocit;\r\n        paper.bibcup_relevant /= m.relRelBibcup;\r\n\r\n        delete paper.refs_pool;\r\n        delete paper.cited_pool;\r\n        delete paper.cocit_pool;\r\n        delete paper.bibcup_pool;\r\n\r\n        paper.relevance =\r\n          (paper.refs_relevant +\r\n            paper.cited_relevant +\r\n            paper.cocit_relevant +\r\n            paper.bibcup_relevant) /\r\n          4;\r\n      } else {\r\n        paper.refs_pool /= m.poolPoolRefs;\r\n        paper.cited_pool /= m.poolPoolCited;\r\n        paper.cocit_pool /= m.poolPoolCocit;\r\n        paper.bibcup_pool /= m.poolPoolBibcup;\r\n\r\n        paper.refs_relevant /= m.poolRelRefs;\r\n        paper.cited_relevant /= m.poolRelCited;\r\n        paper.cocit_relevant /= m.poolRelCocit;\r\n        paper.bibcup_relevant /= m.poolRelBibcup;\r\n\r\n        paper.relevance =\r\n          (paper.refs_relevant +\r\n            paper.cited_relevant +\r\n            paper.cocit_relevant +\r\n            paper.bibcup_relevant +\r\n            paper.refs_pool +\r\n            paper.cited_pool +\r\n            paper.cocit_pool +\r\n            paper.bibcup_pool) /\r\n          8;\r\n      }\r\n    });\r\n\r\n    console.log(\"papers,\", papers);\r\n\r\n    return papers;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n// import reportWebVitals from \"./reportWebVitals\";\r\nimport { mergeStyles, initializeIcons } from \"@fluentui/react\";\r\n\r\n// Inject some global styles\r\nmergeStyles({\r\n  selectors: {\r\n    \":global(body), :global(html), :global(#app)\": {\r\n      margin: 0,\r\n      padding: 0,\r\n      height: \"100vh\",\r\n    },\r\n  },\r\n});\r\n\r\ninitializeIcons();\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals(console.log);\r\n"],"sourceRoot":""}