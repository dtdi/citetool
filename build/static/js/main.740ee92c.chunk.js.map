{"version":3,"sources":["app/components/ResultList.js","app/components/DetailsFrame.js","img/header.jpg","img/potato.svg","app/components/ApiModal.js","app/components/LoadFileModal.js","app/components/InfoModal.js","App.js","index.js"],"names":["ResultList","props","_onColumnClick","ev","column","columns","state","items","newColumns","slice","currColumn","filter","currCol","key","forEach","newCol","isSortedDescending","isSorted","setState","announcedMessage","name","newItems","columnKey","sort","a","b","_copyAndSort","fieldName","onSelectSingle","selectedKey","minWidth","maxWidth","onColumnClick","onRender","item","relevance","toFixed","data","isPadded","sortAscendingAriaLabel","sortDescendingAriaLabel","isMultiline","authors","year","_selection","Selection","onSelectionChanged","getSelectedCount","getSelection","selectedItem","isModalSelection","isCompactMode","selectToKey","this","isLoading","ShimmeredDetailsList","enableShimmer","length","compact","selectionMode","SelectionMode","single","getKey","_getKey","setKey","layoutMode","DetailsListLayoutMode","fixedColumns","isHeaderVisible","selection","selectionPreservedOnEmptyClick","enterModalSelectionOnTouch","ariaLabelForSelectionColumn","ariaLabelForSelectAllCheckbox","checkButtonAriaLabel","index","Component","classNames","mergeStyleSets","relative","position","DetailsFrame","ShimmerElementsGroup","flexWrap","style","width","shimmerElements","type","ShimmerElementType","line","selectedPaper","onPaperAction","Stack","height","tokens","childrenGap","horizontal","horizontalAlign","inList","LIST_RESULT","PrimaryButton","text","iconProps","iconName","onClick","LIST_RELEVANT","LIST_NOT_RELEVANT","DefaultButton","Shimmer","isDataLoaded","Text","variant","gap","publication","StackItem","grow","className","ScrollablePane","scrollbarVisibility","ScrollbarVisibility","auto","customElementsGroup","customElements","abstract","Link","target","href","abstractlink","doi","citedByCount","refs","theme","getTheme","ApiModal","isOpen","onClose","apiKey","onApiKeyChange","onClearCache","Modal","isBlocking","containerClassName","contentStyles","container","header","IconButton","styles","iconButtonStyles","ariaLabel","body","verticalAlign","TextField","label","value","onChange","display","flexFlow","alignItems","fonts","xLarge","flex","borderTop","palette","themePrimary","color","neutralPrimary","fontWeight","FontWeights","semibold","padding","overflowY","root","marginLeft","marginTop","marginRight","rootHovered","neutralDark","LoadFileModal","onLoadFile","vertical","id","InfoModal","title","paperFrame","background","white","searchBar","PaperCache","prefix","encodeURIComponent","controller","signal","get","fetch","response","TypeError","abort","ok","status","json","set","console","log","message","Error","del","App","elem","clear","loadSemScholar","cache","getOrLoad","onLoadData","searchString","query","count","limit","start","totalResults","error","statusCode","statusText","errorState","apiError","results","Number","paperList","entry","push","result","processSearchResults","handleTabLinkClick","selectedTabId","itemKey","newPaper","action","newList","paper","map","p","oldPaper","find","inBatch","paperId","cites","raw","ids","author","join","venue","loadSemScholarForMany","getPaperScores","onToCitavi","relevantList","doiList","blob","Blob","anchor","document","createElement","download","window","webkitURL","URL","createObjectURL","dataset","downloadurl","click","onSave","stateJSON","JSON","stringify","onLoadFileOpenClose","isLoadFileModalOpen","onInfoModalClose","isInfoModalOpen","onSettingsOpenClose","isApiKeyModalOpen","newVal","file","files","reader","FileReader","onload","e","savedText","savedState","parse","readAsText","closeMessageBar","toggleSearchHelper","isSearchHelper","clearSearch","searchResultsList","notRelevantList","listRef","React","createRef","fileLocation","lastSearch","listType","prevProps","prevState","_filterPapers","listItems","_items","disabled","_farItems","iconOnly","Image","src","alt","logo","SearchBox","placeholder","onSearch","TeachingBubble","hasCloseButton","closeButtonAriaLabel","primaryButtonProps","children","onDismiss","headline","CommandBar","overflowItems","overflowButtonProps","farItems","Sticky","stickyPosition","StickyPositionType","Header","Pivot","onLinkClick","headersOnly","linkFormat","PivotLinkFormat","tabs","PivotItem","itemIcon","headerText","itemCount","ProgressIndicator","description","MessageBar","messageBarType","MessageBarType","dismissButtonAriaLabel","ref","AbortController","Promise","all","semScholar","references","citations","updatedPaper","searchResults","searchQuery","entries","oldItems","some","link","substr","scopusEntry","papers","matrix","Array","paperIds","i","row","fill","idx","indexOf","isRelevant","refs_relevant","refs_pool","cited_relevant","cited_pool","cocit_pool","cocit_relevant","bibcup_pool","bibcup_relevant","m","j","k","relevantKpis","_","poolKpis","poolPoolRefs","Math","max","l","poolPoolCited","poolPoolCocit","poolPoolBibcup","relRelRefs","relRelCited","relRelCocit","relRelBibcup","poolRelRefs","poolRelCited","poolRelCocit","poolRelBibcup","Sentry","dsn","autoSessionTracking","integrations","Integrations","BrowserTracing","tracesSampleRate","mergeStyles","selectors","margin","overflow","initializeIcons","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.740ee92c.chunk.js","sourcesContent":["import {\r\n  ShimmeredDetailsList,\r\n  Selection,\r\n  SelectionMode,\r\n  DetailsListLayoutMode,\r\n} from \"@fluentui/react\";\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nexport default class ResultList extends Component {\r\n  _selection;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { onSelectSingle, selectedKey } = this.props;\r\n\r\n    const columns = [\r\n      {\r\n        key: \"column1\",\r\n        name: \"Relevance\",\r\n        fieldName: \"relevance\",\r\n        minWidth: 30,\r\n        maxWidth: 50,\r\n        isSorted: true,\r\n        isSortedDescending: true,\r\n        onColumnClick: this._onColumnClick,\r\n        onRender: (item) => {\r\n          return <span>{(item.relevance * 100).toFixed(2) + \"%\"}</span>;\r\n        },\r\n        data: \"string\",\r\n        isPadded: true,\r\n      },\r\n      {\r\n        key: \"column2\",\r\n        name: \"Name\",\r\n        fieldName: \"name\",\r\n        maxWidth: 350,\r\n        sortAscendingAriaLabel: \"Sorted A to Z\",\r\n        sortDescendingAriaLabel: \"Sorted Z to A\",\r\n        onColumnClick: this._onColumnClick,\r\n        data: \"string\",\r\n        isPadded: true,\r\n        isMultiline: true,\r\n      },\r\n      {\r\n        key: \"column3\",\r\n        name: \"Author/Year\",\r\n        fieldName: \"authors\",\r\n        minWidth: 75,\r\n        maxWidth: 150,\r\n        onColumnClick: this._onColumnClick,\r\n        data: \"string\",\r\n        onRender: (item) => {\r\n          return (\r\n            <span>\r\n              {item.authors} ({item.year})\r\n            </span>\r\n          );\r\n        },\r\n        isPadded: true,\r\n        isMultiline: true,\r\n      },\r\n    ];\r\n\r\n    this._selection = new Selection({\r\n      onSelectionChanged: () => {\r\n        const selectionCount = this._selection.getSelectedCount();\r\n        if (selectionCount === 1) {\r\n          onSelectSingle(this._selection.getSelection()[0]);\r\n        }\r\n      },\r\n    });\r\n\r\n    this.state = {\r\n      announcedMessage: null,\r\n      columns: columns,\r\n      selectedItem: null,\r\n      isModalSelection: false,\r\n      isCompactMode: false,\r\n    };\r\n\r\n    this._selection.selectToKey(selectedKey, true);\r\n  }\r\n\r\n  render() {\r\n    const { columns } = this.state;\r\n\r\n    const { items, isLoading } = this.props;\r\n\r\n    return (\r\n      <ShimmeredDetailsList\r\n        items={items}\r\n        enableShimmer={isLoading || items.length === 0}\r\n        compact={false}\r\n        onColumnClick={this._onColumnClick}\r\n        columns={columns}\r\n        selectionMode={SelectionMode.single}\r\n        getKey={this._getKey}\r\n        setKey=\"multiple\"\r\n        layoutMode={DetailsListLayoutMode.fixedColumns}\r\n        isHeaderVisible={true}\r\n        selection={this._selection}\r\n        selectionPreservedOnEmptyClick={true}\r\n        enterModalSelectionOnTouch={true}\r\n        ariaLabelForSelectionColumn=\"Toggle selection\"\r\n        ariaLabelForSelectAllCheckbox=\"Toggle selection for all items\"\r\n        checkButtonAriaLabel=\"Row checkbox\"\r\n      />\r\n    );\r\n  }\r\n\r\n  _getKey(item, index) {\r\n    return item ? item.key : index;\r\n  }\r\n\r\n  _onColumnClick = (ev, column) => {\r\n    const { columns } = this.state;\r\n    const { items } = this.props;\r\n    const newColumns = columns.slice();\r\n    const currColumn = newColumns.filter(\r\n      (currCol) => column.key === currCol.key\r\n    )[0];\r\n    newColumns.forEach((newCol) => {\r\n      if (newCol === currColumn) {\r\n        currColumn.isSortedDescending = !currColumn.isSortedDescending;\r\n        currColumn.isSorted = true;\r\n        this.setState({\r\n          announcedMessage: `${currColumn.name} is sorted ${\r\n            currColumn.isSortedDescending ? \"descending\" : \"ascending\"\r\n          }`,\r\n        });\r\n      } else {\r\n        newCol.isSorted = false;\r\n        newCol.isSortedDescending = true;\r\n      }\r\n    });\r\n    const newItems = _copyAndSort(\r\n      items,\r\n      currColumn.fieldName,\r\n      currColumn.isSortedDescending\r\n    );\r\n    this.setState({\r\n      columns: newColumns,\r\n      items: newItems,\r\n    });\r\n  };\r\n}\r\n\r\nfunction _copyAndSort(items, columnKey, isSortedDescending) {\r\n  const key = columnKey;\r\n  return items\r\n    .slice(0)\r\n    .sort((a, b) =>\r\n      (isSortedDescending ? a[key] < b[key] : a[key] > b[key]) ? 1 : -1\r\n    );\r\n}\r\n","import {\r\n  Stack,\r\n  DefaultButton,\r\n  PrimaryButton,\r\n  ScrollablePane,\r\n  ScrollbarVisibility,\r\n  mergeStyleSets,\r\n  Link,\r\n  Shimmer,\r\n  ShimmerElementsGroup,\r\n  ShimmerElementType,\r\n  Text,\r\n  StackItem,\r\n} from \"@fluentui/react\";\r\nimport React, { Component } from \"react\";\r\nimport { LIST_NOT_RELEVANT, LIST_RELEVANT, LIST_RESULT } from \"../../App\";\r\n\r\nconst classNames = mergeStyleSets({\r\n  relative: {\r\n    position: \"relative\",\r\n  },\r\n});\r\n\r\nexport default class DetailsFrame extends Component {\r\n  customElements() {\r\n    return (\r\n      <ShimmerElementsGroup\r\n        flexWrap\r\n        style\r\n        width=\"100%\"\r\n        shimmerElements={[\r\n          { type: ShimmerElementType.line },\r\n          { type: ShimmerElementType.line },\r\n          { type: ShimmerElementType.line },\r\n          { type: ShimmerElementType.line },\r\n          { type: ShimmerElementType.line },\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    const { selectedPaper, onPaperAction, isLoading } = this.props;\r\n    if (!selectedPaper) {\r\n      return (\r\n        <Stack>\r\n          <Text>Howdy, Partner!</Text>\r\n          <Text>\r\n            This website helps to discover exciting new papers in three easy\r\n            steps:\r\n            <ol>\r\n              <li>\r\n                To get started, use the search box above to start a search query\r\n                on Scopus.\r\n              </li>\r\n              <li>\r\n                Based on the results, we suggest relevant papers on the left,\r\n                which you can mark as relevant or irrelevant using the buttons\r\n                at the top. Your vote will automatically move the paper to the\r\n                lists on the right side of the page. Based on the papers you\r\n                rated as relevant, we will suggest new papers to rate. For this\r\n                purpose, we use bibliometric data (i.e., co-citation &\r\n                bibliometric coupling) to find papers that have a particularly\r\n                high overlap with your selection.\r\n              </li>\r\n              <li>\r\n                If you have identified enough papers or if our suggestions do\r\n                not contain any more relevant papers, use the download function\r\n                in the header to export your results as a list.\r\n              </li>\r\n            </ol>\r\n          </Text>\r\n        </Stack>\r\n      );\r\n    }\r\n    return (\r\n      <Stack\r\n        style={{ position: \"relative\", height: \"100%\" }}\r\n        tokens={{ childrenGap: 5 }}\r\n      >\r\n        <Stack\r\n          horizontal\r\n          horizontalAlign={\"space-evenly\"}\r\n          tokens={{ childrenGap: 5 }}\r\n        >\r\n          {selectedPaper.inList !== LIST_RESULT && (\r\n            <PrimaryButton\r\n              text=\"Back to Pool\"\r\n              iconProps={{ iconName: \"RevToggleKey\" }}\r\n              onClick={() => {\r\n                onPaperAction(selectedPaper, \"move-to-result\");\r\n              }}\r\n            />\r\n          )}\r\n          {selectedPaper.inList !== LIST_RELEVANT && (\r\n            <PrimaryButton\r\n              text=\"Mark relevant\"\r\n              iconProps={{ iconName: \"Accept\" }}\r\n              onClick={() => {\r\n                onPaperAction(selectedPaper, \"move-to-relevant\");\r\n              }}\r\n            />\r\n          )}\r\n          {selectedPaper.inList !== LIST_NOT_RELEVANT && (\r\n            <DefaultButton\r\n              text=\"Mark not relevant\"\r\n              iconProps={{ iconName: \"StatusCircleErrorX\" }}\r\n              onClick={() => {\r\n                onPaperAction(selectedPaper, \"move-to-not-relevant\");\r\n              }}\r\n            />\r\n          )}\r\n        </Stack>\r\n\r\n        <Shimmer\r\n          shimmerElements={[{ type: ShimmerElementType.line, height: 22 }]}\r\n          width={\"80%\"}\r\n          isDataLoaded={!isLoading}\r\n        >\r\n          <Text variant={\"mediumPlus\"}>{selectedPaper.name}</Text>\r\n        </Shimmer>\r\n\r\n        <Shimmer\r\n          shimmerElements={[\r\n            { type: ShimmerElementType.line, width: \"15%\" },\r\n            { type: ShimmerElementType.gap, width: 10 },\r\n            { type: ShimmerElementType.line, width: \"80%\" },\r\n          ]}\r\n          width={\"60%\"}\r\n          isDataLoaded={!isLoading}\r\n        >\r\n          <Text>\r\n            <b>Authors:</b> <i>{selectedPaper.authors}</i>\r\n          </Text>\r\n        </Shimmer>\r\n        <Shimmer\r\n          isDataLoaded={!isLoading}\r\n          shimmerElements={[\r\n            { type: ShimmerElementType.line, width: \"5%\" },\r\n            { type: ShimmerElementType.gap, width: 10 },\r\n            { type: ShimmerElementType.line, width: \"90%\" },\r\n          ]}\r\n        >\r\n          <Text>\r\n            <b>In:</b> <i>{selectedPaper.publication}</i>\r\n          </Text>\r\n        </Shimmer>\r\n        <StackItem grow className={classNames.relative}>\r\n          <ScrollablePane scrollbarVisibility={ScrollbarVisibility.auto}>\r\n            <Shimmer\r\n              customElementsGroup={this.customElements()}\r\n              isDataLoaded={!isLoading}\r\n            >\r\n              <Text>{selectedPaper.abstract}</Text>\r\n            </Shimmer>\r\n          </ScrollablePane>\r\n        </StackItem>\r\n\r\n        <Stack\r\n          horizontal\r\n          horizontalAlign=\"space-between\"\r\n          tokens={{ childrenGap: 5 }}\r\n        >\r\n          <Text>\r\n            <b>Year:</b> {selectedPaper.year}\r\n          </Text>\r\n          <Text>\r\n            <b>Type:</b> {selectedPaper.type}\r\n          </Text>\r\n          <Text>\r\n            <b>DOI:</b>{\" \"}\r\n            <Link target={\"_blank\"} href={selectedPaper.abstractlink}>\r\n              {selectedPaper.doi}\r\n            </Link>\r\n          </Text>\r\n        </Stack>\r\n        <Stack\r\n          horizontal\r\n          horizontalAlign=\"space-between\"\r\n          tokens={{ childrenGap: 10 }}\r\n        >\r\n          <Text>\r\n            <b>Relevance Score:</b>{\" \"}\r\n            {(selectedPaper.relevance * 100).toFixed(2) + \"%\"}\r\n          </Text>\r\n          <Text>\r\n            <b>#Cited-by:</b> {selectedPaper.citedByCount}\r\n          </Text>\r\n          <Text>\r\n            <b>#References:</b> {selectedPaper.refs.length}\r\n          </Text>\r\n        </Stack>\r\n      </Stack>\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/header.56f2f34e.jpg\";","export default __webpack_public_path__ + \"static/media/potato.b60e5447.svg\";","import {\r\n  Modal,\r\n  IconButton,\r\n  Stack,\r\n  Text,\r\n  TextField,\r\n  mergeStyleSets,\r\n  DefaultButton,\r\n  getTheme,\r\n  Link,\r\n  FontWeights,\r\n  PrimaryButton,\r\n} from \"@fluentui/react\";\r\n\r\nconst theme = getTheme();\r\n\r\nexport default function ApiModal(props) {\r\n  const { isOpen, onClose, apiKey, onApiKeyChange, onClearCache } = props;\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      isBlocking={false}\r\n      containerClassName={contentStyles.container}\r\n    >\r\n      <div className={contentStyles.header}>\r\n        <Text>Welcome to Potatosearch</Text>\r\n        <IconButton\r\n          styles={iconButtonStyles}\r\n          iconProps={{ iconName: \"Cancel\" }}\r\n          ariaLabel=\"Close popup modal\"\r\n          onClick={onClose}\r\n        />\r\n      </div>\r\n      <div className={contentStyles.body}>\r\n        <Stack tokens={{ childrenGap: 5 }}>\r\n          <Text variant=\"mediumPlus\">\r\n            This website helps to discover exciting new papers in three easy\r\n            steps:\r\n          </Text>\r\n          <Text>\r\n            <ol>\r\n              <li>\r\n                To get started, use the search box above to start a search query\r\n                on Scopus.\r\n              </li>\r\n              <li>\r\n                Based on the results, we suggest relevant papers on the left,\r\n                which you can mark as relevant or irrelevant using the buttons\r\n                at the top. Your vote will automatically move the paper to the\r\n                lists on the right side of the page. Based on the papers you\r\n                rated as relevant, we will suggest new papers to rate. For this\r\n                purpose, we use bibliometric data (i.e., co-citation &\r\n                bibliometric coupling) to find papers that have a particularly\r\n                high overlap with your selection.\r\n              </li>\r\n              <li>\r\n                If you have identified enough papers or if our suggestions do\r\n                not contain any more relevant papers, use the download function\r\n                in the header to export your results as a list.\r\n              </li>\r\n            </ol>\r\n          </Text>\r\n          <Text variant=\"mediumPlus\">\r\n            Before you start: Please provide your Scopus API-Key:\r\n          </Text>\r\n          <Link\r\n            href=\"https://github.com/dtdi/citetool/wiki/API-Key\"\r\n            target=\"_blank\"\r\n          >\r\n            Read here, how to obtain and configure your api key.\r\n          </Link>\r\n          <Stack horizontal verticalAlign=\"end\" tokens={{ childrenGap: 10 }}>\r\n            <TextField\r\n              label=\"Provide in your API Code\"\r\n              style={{ width: 300 }}\r\n              value={apiKey}\r\n              onChange={onApiKeyChange}\r\n            />\r\n            <PrimaryButton onClick={onClose}>Save</PrimaryButton>\r\n            <DefaultButton onClick={onClearCache}>Clear Cache</DefaultButton>\r\n          </Stack>\r\n        </Stack>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\nconst contentStyles = mergeStyleSets({\r\n  container: {\r\n    display: \"flex\",\r\n    flexFlow: \"column nowrap\",\r\n    alignItems: \"stretch\",\r\n    width: \"1000px\",\r\n    maxWidth: \"100%\",\r\n  },\r\n  header: [\r\n    theme.fonts.xLarge,\r\n    {\r\n      flex: \"1 1 auto\",\r\n      borderTop: `4px solid ${theme.palette.themePrimary}`,\r\n      color: theme.palette.neutralPrimary,\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      fontWeight: FontWeights.semibold,\r\n      padding: \"12px 12px 14px 24px\",\r\n    },\r\n  ],\r\n  body: {\r\n    flex: \"4 4 auto\",\r\n    padding: \"0 24px 24px 24px\",\r\n    overflowY: \"hidden\",\r\n  },\r\n});\r\n\r\nconst iconButtonStyles = {\r\n  root: {\r\n    color: theme.palette.neutralPrimary,\r\n    marginLeft: \"auto\",\r\n    marginTop: \"4px\",\r\n    marginRight: \"2px\",\r\n  },\r\n  rootHovered: {\r\n    color: theme.palette.neutralDark,\r\n  },\r\n};\r\n","import {\r\n  Modal,\r\n  IconButton,\r\n  Stack,\r\n  Text,\r\n  mergeStyleSets,\r\n  getTheme,\r\n  FontWeights,\r\n} from \"@fluentui/react\";\r\n\r\nconst theme = getTheme();\r\n\r\nexport default function LoadFileModal(props) {\r\n  const { isOpen, onClose, onLoadFile } = props;\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      isBlocking={false}\r\n      containerClassName={contentStyles.container}\r\n    >\r\n      <div className={contentStyles.header}>\r\n        <Text>Load your Data</Text>\r\n        <IconButton\r\n          styles={iconButtonStyles}\r\n          iconProps={{ iconName: \"Cancel\" }}\r\n          ariaLabel=\"Close popup modal\"\r\n          onClick={onClose}\r\n        />\r\n      </div>\r\n      <div className={contentStyles.body}>\r\n        <Stack tokens={{ childrenGap: 5 }}>\r\n          <Text variant=\"mediumPlus\">\r\n            Load data from a PotatoSeachData.json File. Make sure to save your\r\n            current data before loading a file as the loading process will reset\r\n            all tables\r\n          </Text>\r\n          \r\n          <Stack vertical verticalAlign=\"end\" tokens={{ childrenGap: 10 }}>\r\n            <input\r\n              type=\"file\"\r\n              id=\"file\"\r\n              name=\"file\"\r\n              style={{ width: 400 }}\r\n              onChange={onLoadFile}\r\n             />\r\n          </Stack>\r\n        </Stack>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\nconst contentStyles = mergeStyleSets({\r\n  container: {\r\n    display: \"flex\",\r\n    flexFlow: \"column nowrap\",\r\n    alignItems: \"stretch\",\r\n    width: \"1000px\",\r\n    maxWidth: \"100%\",\r\n  },\r\n  header: [\r\n    theme.fonts.xLarge,\r\n    {\r\n      flex: \"1 1 auto\",\r\n      borderTop: `4px solid ${theme.palette.themePrimary}`,\r\n      color: theme.palette.neutralPrimary,\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      fontWeight: FontWeights.semibold,\r\n      padding: \"12px 12px 14px 24px\",\r\n    },\r\n  ],\r\n  body: {\r\n    flex: \"4 4 auto\",\r\n    padding: \"0 24px 24px 24px\",\r\n    overflowY: \"hidden\",\r\n  },\r\n});\r\n\r\nconst iconButtonStyles = {\r\n  root: {\r\n    color: theme.palette.neutralPrimary,\r\n    marginLeft: \"auto\",\r\n    marginTop: \"4px\",\r\n    marginRight: \"2px\",\r\n  },\r\n  rootHovered: {\r\n    color: theme.palette.neutralDark,\r\n  },\r\n};\r\n","import {\r\n  Modal,\r\n  IconButton,\r\n  Stack,\r\n  Text,\r\n  TextField,\r\n  mergeStyleSets,\r\n  DefaultButton,\r\n  getTheme,\r\n  Link,\r\n  FontWeights,\r\n  PrimaryButton,\r\n} from \"@fluentui/react\";\r\n\r\nconst theme = getTheme();\r\n\r\nexport default function InfoModal(props) {\r\n  const { isOpen, onClose } = props;\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      isBlocking={false}\r\n      containerClassName={contentStyles.container}\r\n    >\r\n      <div className={contentStyles.header}>\r\n        <Text>About Potatosearch</Text>\r\n        <IconButton\r\n          styles={iconButtonStyles}\r\n          iconProps={{ iconName: \"Cancel\" }}\r\n          ariaLabel=\"Close popup modal\"\r\n          onClick={onClose}\r\n        />\r\n      </div>\r\n      <div className={contentStyles.body}>\r\n        <Stack tokens={{ childrenGap: 5 }}>\r\n          <Text variant=\"mediumPlus\">\r\n            This website helps to discover exciting new papers in three easy\r\n            steps:\r\n          </Text>\r\n          <Text>Potatosearch makes heavy use of the semanticScholar API.</Text>\r\n          <Text>\r\n            <div>\r\n              Potato Icon made by{\" \"}\r\n              <a\r\n                href=\"https://www.flaticon.com/authors/good-ware\"\r\n                title=\"Good Ware\"\r\n              >\r\n                Good Ware\r\n              </a>{\" \"}\r\n              from{\" \"}\r\n              <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">\r\n                www.flaticon.com\r\n              </a>\r\n            </div>\r\n          </Text>\r\n        </Stack>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\nconst contentStyles = mergeStyleSets({\r\n  container: {\r\n    display: \"flex\",\r\n    flexFlow: \"column nowrap\",\r\n    alignItems: \"stretch\",\r\n    width: \"1000px\",\r\n    maxWidth: \"100%\",\r\n  },\r\n  header: [\r\n    theme.fonts.xLarge,\r\n    {\r\n      flex: \"1 1 auto\",\r\n      borderTop: `4px solid ${theme.palette.themePrimary}`,\r\n      color: theme.palette.neutralPrimary,\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      fontWeight: FontWeights.semibold,\r\n      padding: \"12px 12px 14px 24px\",\r\n    },\r\n  ],\r\n  body: {\r\n    flex: \"4 4 auto\",\r\n    padding: \"0 24px 24px 24px\",\r\n    overflowY: \"hidden\",\r\n  },\r\n});\r\n\r\nconst iconButtonStyles = {\r\n  root: {\r\n    color: theme.palette.neutralPrimary,\r\n    marginLeft: \"auto\",\r\n    marginTop: \"4px\",\r\n    marginRight: \"2px\",\r\n  },\r\n  rootHovered: {\r\n    color: theme.palette.neutralDark,\r\n  },\r\n};\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Stack,\r\n  StackItem,\r\n  CommandBar,\r\n  Pivot,\r\n  PivotItem,\r\n  Image,\r\n  mergeStyleSets,\r\n  Text,\r\n  SearchBox,\r\n  IconButton,\r\n  TeachingBubble,\r\n  PivotLinkFormat,\r\n  ProgressIndicator,\r\n  ScrollablePane,\r\n  ScrollbarVisibility,\r\n  Sticky,\r\n  StickyPositionType,\r\n  Link,\r\n  MessageBar,\r\n  MessageBarType,\r\n  getTheme,\r\n} from \"@fluentui/react\";\r\n\r\nimport { get, set, del, clear } from \"idb-keyval\";\r\n\r\n// import result from \"./data/scopusresult.json\";\r\n\r\nimport ResultList from \"./app/components/ResultList\";\r\nimport DetailsFrame from \"./app/components/DetailsFrame\";\r\nimport header from \"./img/header.jpg\";\r\nimport logo from \"./img/potato.svg\";\r\nimport \"./style.css\";\r\n\r\nimport ApiModal from \"./app/components/ApiModal\";\r\nimport LoadFileModal from \"./app/components/LoadFileModal\";\r\nimport InfoModal from \"./app/components/InfoModal\";\r\n\r\nconst theme = getTheme();\r\nconst classNames = mergeStyleSets({\r\n  paperFrame: {\r\n    width: \"40vw\",\r\n    padding: 20,\r\n    background: theme.palette.white,\r\n    position: \"relative\",\r\n    height: \"100%\",\r\n    \"box-sizing\": \"border-box\",\r\n  },\r\n  searchBar: {\r\n    background: theme.palette.white,\r\n  },\r\n});\r\n\r\nexport const LIST_RESULT = \"result\";\r\nexport const LIST_RELEVANT = \"relevant\";\r\nexport const LIST_NOT_RELEVANT = \"not-relevant\";\r\n\r\nclass PaperCache {\r\n  prefix = \"paper_\";\r\n\r\n  _getKey(doi) {\r\n    return this.prefix + encodeURIComponent(doi);\r\n  }\r\n\r\n  async getOrLoad(doi, controller, signal) {\r\n    const key = this._getKey(doi);\r\n    const item = await get(key);\r\n    if (item) {\r\n      return item;\r\n    } else {\r\n      let response;\r\n      try {\r\n        response = await fetch(\r\n          `https://api.semanticscholar.org/v1/paper/${doi}?include_unknown_references=true`,\r\n          { signal }\r\n        );\r\n      } catch (e) {\r\n        if (e instanceof TypeError) {\r\n          controller.abort();\r\n          throw e;\r\n        } else {\r\n          throw e;\r\n        }\r\n      }\r\n      if (!response.ok) {\r\n        if (response.status === 404) {\r\n          const body = await response.json();\r\n          set(key, body);\r\n          console.log(404);\r\n          return body;\r\n        } else {\r\n          const message = `An error has occured: ${response.status}`;\r\n          throw new Error(message);\r\n        }\r\n      }\r\n      const body = await response.json();\r\n      try {\r\n        set(key, body);\r\n      } catch (e) {\r\n        const message = `Unknown error`;\r\n        throw new Error(message, e);\r\n      }\r\n      return body;\r\n    }\r\n  }\r\n\r\n  remove(doi) {\r\n    del(this._getKey(doi));\r\n  }\r\n}\r\n\r\nexport default class App extends Component {\r\n  listRef;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.listRef = React.createRef();\r\n\r\n    this.state = {\r\n      paperList: [],\r\n      selectedPaper: null,\r\n      isSearchHelper: false,\r\n      searchResultsList: [],\r\n      relevantList: [],\r\n      notRelevantList: [],\r\n      selectedTabId: \"searchResultsList\",\r\n      apiKey: \"\",\r\n      fileLocation: \"\",\r\n      isApiKeyModalOpen: false,\r\n      isLoadFileModalOpen: false,\r\n      isInfoModalOpen: false,\r\n      isLoading: false,\r\n      searchString: `TITLE-ABS-KEY(\"heart attack\")`,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const lastSearch = await get(\"lastSearch\");\r\n    const apiKey = await get(\"apiKey\");\r\n    if (apiKey) {\r\n      this.setState({\r\n        apiKey: apiKey,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isApiKeyModalOpen: true,\r\n      });\r\n    }\r\n    if (lastSearch) {\r\n      this.setState({ isLoading: true, searchString: lastSearch.searchString });\r\n      await this.processSearchResults(lastSearch.result);\r\n      this.setState({ isLoading: false });\r\n    }\r\n  }\r\n\r\n  _filterPapers(listType) {\r\n    const { paperList } = this.state;\r\n    return paperList.filter((paper) => {\r\n      return paper.inList === listType;\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.paperList !== this.state.paperList) {\r\n      this.setState({\r\n        searchResultsList: this._filterPapers(LIST_RESULT),\r\n        relevantList: this._filterPapers(LIST_RELEVANT),\r\n        notRelevantList: this._filterPapers(LIST_NOT_RELEVANT),\r\n      });\r\n    }\r\n  }\r\n\r\n  onSelectSingle = async (elem) => {\r\n    this.setState({\r\n      selectedPaper: elem,\r\n    });\r\n  };\r\n\r\n  onClearCache = async (ev) => {\r\n    clear();\r\n  };\r\n\r\n  loadSemScholar = async (doi, controller, signal) => {\r\n    let cache = new PaperCache();\r\n    try {\r\n      const item = await cache.getOrLoad(doi, controller, signal);\r\n      return item;\r\n    } catch (e) {\r\n      console.log(\"resource exhausted\", e);\r\n    }\r\n  };\r\n\r\n  onLoadData = async (searchString) => {\r\n    this.setState({\r\n      isLoading: true,\r\n      selectedPaper: null,\r\n      searchString: searchString,\r\n    });\r\n    const { apiKey } = this.state;\r\n\r\n    const query = encodeURIComponent(searchString);\r\n    const count = 25;\r\n    const limit = 25;\r\n    let start = 0;\r\n    const sort = \"relevancy\";\r\n\r\n    let errorState;\r\n    let results;\r\n    let totalResults = 0;\r\n\r\n    do {\r\n      try {\r\n        const response = await fetch(\r\n          `https://api.elsevier.com/content/search/scopus?apiKey=${apiKey}&query=${query}&count=${count}&start=${start}&sort=${sort}`\r\n        );\r\n        if (!response.ok) {\r\n          let error = \"\";\r\n\r\n          if (response.status === 400) {\r\n            const body = await response.json();\r\n            error = `An error has occured (${response.status}) ${body[\"service-error\"].status.statusCode}: ${body[\"service-error\"].status.statusText}`;\r\n          } else {\r\n            error = `An error has occured (${response.status})`;\r\n          }\r\n\r\n          errorState = {\r\n            isLoading: false,\r\n            apiError: error,\r\n          };\r\n          break;\r\n        }\r\n\r\n        const body = await response.json();\r\n        if (!results) {\r\n          results = body;\r\n          totalResults = Number(\r\n            results[\"search-results\"][\"opensearch:totalResults\"]\r\n          );\r\n\r\n          if (totalResults === 0) {\r\n            errorState = {\r\n              isLoading: false,\r\n              paperList: [],\r\n              apiError: \"Search did not return any results\",\r\n            };\r\n            break;\r\n          }\r\n        } else {\r\n          results[\"search-results\"].entry.push(...body[\"search-results\"].entry);\r\n        }\r\n      } catch (e) {\r\n        errorState = {\r\n          isLoading: false,\r\n          apiError: e.message,\r\n        };\r\n        break;\r\n      }\r\n      start += count;\r\n    } while (start < limit && start <= totalResults);\r\n\r\n    if (errorState) {\r\n      this.setState(errorState);\r\n      return;\r\n    }\r\n    await set(\"lastSearch\", {\r\n      searchString: this.state.searchString,\r\n      result: results,\r\n    });\r\n    await this.processSearchResults(results);\r\n    this.setState({\r\n      isLoading: false,\r\n    });\r\n  };\r\n\r\n  handleTabLinkClick = (item) => {\r\n    this.setState({\r\n      selectedTabId: item.props.itemKey,\r\n    });\r\n  };\r\n\r\n  onPaperAction = async (newPaper, action) => {\r\n    const { paperList } = this.state;\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    let newList = paperList\r\n      .filter((paper) => {\r\n        return action !== \"remove-paper\" || newPaper.key !== paper.key;\r\n      })\r\n      .map((paper) => {\r\n        if (paper.key === newPaper.key) {\r\n          if (action === \"move-to-result\") {\r\n            newPaper.inList = LIST_RESULT;\r\n          } else if (action === \"move-to-relevant\") {\r\n            newPaper.inList = LIST_RELEVANT;\r\n          } else if (action === \"move-to-not-relevant\") {\r\n            newPaper.inList = LIST_NOT_RELEVANT;\r\n          } else if (action === \"update-paper\") {\r\n          }\r\n\r\n          const updatedPaper = {\r\n            ...paper,\r\n            ...newPaper,\r\n          };\r\n          return updatedPaper;\r\n        }\r\n        return paper;\r\n      });\r\n\r\n    if (action === \"move-to-relevant\") {\r\n      newPaper.refs.forEach((p) => {\r\n        const oldPaper = newList.find((oldPaper) => oldPaper.doi === p.doi);\r\n        if (oldPaper) {\r\n          oldPaper.inBatch.push(newPaper.doi);\r\n        } else {\r\n          newList.push({\r\n            key: p.doi || p.paperId,\r\n            name: p.title,\r\n            abstract: null,\r\n            refs: [],\r\n            cites: [],\r\n            raw: {},\r\n            ids: [],\r\n            authors: p.authors\r\n              ? p.authors.map((author) => author.name).join(\", \")\r\n              : \"\",\r\n            publication: p.venue,\r\n            year: p.year,\r\n            doi: p.doi,\r\n            type: null,\r\n            citedByCount: null,\r\n            inBatch: [newPaper.doi],\r\n            inList: LIST_RESULT,\r\n          });\r\n        }\r\n      });\r\n      newList = await this.loadSemScholarForMany(newList);\r\n    }\r\n\r\n    newList = this.getPaperScores(newList).sort(\r\n      (a, b) => b.relevance - a.relevance\r\n    );\r\n    this.setState({\r\n      paperList: newList,\r\n      isLoading: false,\r\n    });\r\n    this.onSelectSingle(newList.find((p) => p.inList === LIST_RESULT));\r\n  };\r\n\r\n  onToCitavi = () => {\r\n    const { relevantList } = this.state;\r\n    var doiList = \"\";\r\n    relevantList.forEach((paper) => {\r\n      doiList += paper.doi + \"\\n\";\r\n    });\r\n\r\n    const blob = new Blob([doiList], { type: \"text/plain\" });\r\n    const anchor = document.createElement(\"a\");\r\n\r\n    anchor.download = \"PotatoSearch2Citavi.txt\";\r\n    anchor.href = (window.webkitURL || window.URL).createObjectURL(blob);\r\n    anchor.dataset.downloadurl = [\r\n      \"text/plain\",\r\n      anchor.download,\r\n      anchor.href,\r\n    ].join(\":\");\r\n    anchor.click();\r\n  };\r\n\r\n  onSave = () => {\r\n    const { state } = this;\r\n    const stateJSON = JSON.stringify(state);\r\n\r\n    const blob = new Blob([stateJSON], { type: \"text/plain\" });\r\n    const anchor = document.createElement(\"a\");\r\n\r\n    anchor.download = \"PotatoSearchData.json\";\r\n    anchor.href = (window.webkitURL || window.URL).createObjectURL(blob);\r\n    anchor.dataset.downloadurl = [\r\n      \"text/plain\",\r\n      anchor.download,\r\n      anchor.href,\r\n    ].join(\":\");\r\n    anchor.click();\r\n  };\r\n\r\n  onLoadFileOpenClose = () => {\r\n    const { isLoadFileModalOpen } = this.state;\r\n    this.setState({\r\n      isLoadFileModalOpen: !isLoadFileModalOpen,\r\n    });\r\n  };\r\n\r\n  onInfoModalClose = () => {\r\n    const { isInfoModalOpen } = this.state;\r\n    this.setState({\r\n      isInfoModalOpen: !isInfoModalOpen,\r\n    });\r\n  };\r\n\r\n  onSettingsOpenClose = () => {\r\n    const { isApiKeyModalOpen, apiKey } = this.state;\r\n    if (apiKey) {\r\n      set(\"apiKey\", apiKey);\r\n      this.setState({\r\n        isApiKeyModalOpen: !isApiKeyModalOpen,\r\n      });\r\n    } else {\r\n      const error = \"api key not provided.\";\r\n      this.setState(error);\r\n    }\r\n  };\r\n\r\n  onApiKeyChange = (ev, newVal) => {\r\n    this.setState({ apiKey: newVal });\r\n  };\r\n\r\n  onLoadFile = (ev) => {\r\n    const file = ev.target.files;\r\n\r\n    var reader = new FileReader();\r\n    reader.onload = (e) => {\r\n      const savedText = reader.result;\r\n      const savedState = JSON.parse(savedText);\r\n      this.setState(savedState);\r\n    };\r\n    reader.readAsText(file[0]);\r\n  };\r\n\r\n  closeMessageBar = (ev) => {\r\n    this.setState({ apiError: null });\r\n  };\r\n\r\n  toggleSearchHelper = (ev) => {\r\n    this.setState({ isSearchHelper: !this.state.isSearchHelper });\r\n  };\r\n\r\n  clearSearch = async (ev) => {\r\n    await del(\"lastSearch\");\r\n    this.setState({\r\n      paperList: [],\r\n      selectedPaper: null,\r\n      isSearchHelper: false,\r\n      searchResultsList: [],\r\n      relevantList: [],\r\n      notRelevantList: [],\r\n      selectedTabId: \"searchResultsList\",\r\n      isLoading: false,\r\n      searchString: `TITLE-ABS-KEY(\"heart attack\")`,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      selectedPaper,\r\n      searchResultsList,\r\n      searchString,\r\n      isSearchHelper,\r\n      relevantList,\r\n      notRelevantList,\r\n      selectedTabId,\r\n      isApiKeyModalOpen,\r\n      isLoadFileModalOpen,\r\n      isInfoModalOpen,\r\n      apiKey,\r\n      fileLocation,\r\n      isLoading,\r\n      apiError,\r\n    } = this.state;\r\n\r\n    let listItems;\r\n\r\n    switch (selectedTabId) {\r\n      case \"searchResultsList\":\r\n        listItems = searchResultsList;\r\n        break;\r\n      case \"relevantList\":\r\n        listItems = relevantList;\r\n        break;\r\n      case \"notRelevantList\":\r\n        listItems = notRelevantList;\r\n        break;\r\n      default:\r\n        listItems = searchResultsList;\r\n        break;\r\n    }\r\n\r\n    const _items = [\r\n      {\r\n        key: \"load\",\r\n        text: \"Load File\",\r\n        disabled: false,\r\n        iconProps: { iconName: \"Import\" },\r\n        onClick: this.onLoadFileOpenClose,\r\n      },\r\n      {\r\n        key: \"save\",\r\n        text: \"Save\",\r\n        disabled: false,\r\n        iconProps: { iconName: \"Save\" },\r\n        onClick: this.onSave,\r\n      },\r\n      {\r\n        key: \"toCitavi\",\r\n        text: \"To Citavi\",\r\n        disabled: false,\r\n        iconProps: { iconName: \"Share\" },\r\n        onClick: this.onToCitavi,\r\n      },\r\n    ];\r\n\r\n    const _overflowItems = [];\r\n    const _farItems = [\r\n      {\r\n        key: \"settings\",\r\n        text: \"Help & Settings\",\r\n        // This needs an ariaLabel since it's icon-only\r\n        ariaLabel: \"Help & Settings\",\r\n        iconOnly: true,\r\n        iconProps: { iconName: \"Settings\" },\r\n        onClick: this.onSettingsOpenClose,\r\n      },\r\n      {\r\n        key: \"info\",\r\n        text: \"Info\",\r\n        // This needs an ariaLabel since it's icon-only\r\n        ariaLabel: \"Info\",\r\n        iconOnly: true,\r\n        iconProps: { iconName: \"Info\" },\r\n        onClick: this.onInfoModalClose,\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <>\r\n        <ApiModal\r\n          isOpen={isApiKeyModalOpen}\r\n          apiKey={apiKey}\r\n          onClearCache={this.onClearCache}\r\n          onApiKeyChange={this.onApiKeyChange}\r\n          onClose={this.onSettingsOpenClose}\r\n        />\r\n        <LoadFileModal\r\n          isOpen={isLoadFileModalOpen}\r\n          fileLocation={fileLocation}\r\n          onLoadFile={this.onLoadFile}\r\n          onClose={this.onLoadFileOpenClose}\r\n        />\r\n        <InfoModal isOpen={isInfoModalOpen} onClose={this.onInfoModalClose} />\r\n        <Stack\r\n          style={{ height: \"100vh\" }}\r\n          tokens={{ padding: 20, childrenGap: 20 }}\r\n        >\r\n          <Stack\r\n            horizontal\r\n            horizontalAlign={\"space-around\"}\r\n            verticalAlign={\"center\"}\r\n            tokens={{ childrenGap: 20 }}\r\n            className={classNames.searchBar}\r\n          >\r\n            <Image className=\"header\" src={header} alt=\"Header\" />\r\n            <StackItem>\r\n              <Stack\r\n                horizontal\r\n                tokens={{ childrenGap: 10 }}\r\n                horizontalAlign=\"center\"\r\n              >\r\n                <Image\r\n                  className=\"logo\"\r\n                  style={{ width: 28 }}\r\n                  src={logo}\r\n                  alt=\"PotatoSearch\"\r\n                />\r\n                <Text style={{ fontWeight: \"bolder\" }}>Potatosearch</Text>\r\n              </Stack>\r\n            </StackItem>\r\n\r\n            <StackItem>\r\n              <Stack horizontal>\r\n                <SearchBox\r\n                  styles={{ root: { width: 400 } }}\r\n                  placeholder=\"Search\"\r\n                  onSearch={this.onLoadData}\r\n                  value={searchString}\r\n                />\r\n                <IconButton\r\n                  iconProps={{ iconName: \"Delete\" }}\r\n                  title=\"Clear current Search\"\r\n                  id=\"clearSearch\"\r\n                  ariaLabel=\"Help\"\r\n                  onClick={this.clearSearch}\r\n                />\r\n                <IconButton\r\n                  iconProps={{ iconName: \"Help\" }}\r\n                  title=\"Help\"\r\n                  id=\"searchHelpButton\"\r\n                  ariaLabel=\"Help\"\r\n                  onClick={this.toggleSearchHelper}\r\n                />\r\n                {isSearchHelper && (\r\n                  <TeachingBubble\r\n                    target=\"#searchHelpButton\"\r\n                    hasCloseButton={true}\r\n                    closeButtonAriaLabel=\"Close\"\r\n                    primaryButtonProps={{\r\n                      children: \"Explore Search Tips\",\r\n                      target: \"_blank\",\r\n                      href:\r\n                        \"http://schema.elsevier.com/dtds/document/bkapi/search/SCOPUSSearchTips.htm\",\r\n                    }}\r\n                    onDismiss={this.toggleSearchHelper}\r\n                    headline=\"SCOPUS Search Tips\"\r\n                  >\r\n                    SCOPUS Search API supports a Boolean syntax, which is a type\r\n                    of search allowing users to combine keywords with operators\r\n                    such as AND, NOT and OR to further produce more relevant\r\n                    results. For example, a Boolean search could be \"heart\" AND\r\n                    \"brain\". This would limit the search results to only those\r\n                    documents containing the two keywords.\r\n                  </TeachingBubble>\r\n                )}\r\n              </Stack>\r\n            </StackItem>\r\n            <CommandBar\r\n              items={_items}\r\n              overflowItems={_overflowItems}\r\n              overflowButtonProps={{ ariaLabel: \"More Comands\" }}\r\n              farItems={_farItems}\r\n              ariaLabel=\"Use left and right arrow keys to navigate between commands\"\r\n            />\r\n          </Stack>\r\n          <StackItem grow>\r\n            <Stack style={{ height: \"100%\" }} tokens={{ childrenGap: 5 }}>\r\n              <Stack\r\n                horizontal\r\n                style={{ height: \"100%\" }}\r\n                horizontalAlign=\"space-evenly\"\r\n                tokens={{ childrenGap: 10 }}\r\n              >\r\n                <StackItem className={classNames.paperFrame}>\r\n                  <DetailsFrame\r\n                    isLoading={isLoading}\r\n                    selectedPaper={selectedPaper}\r\n                    onPaperAction={this.onPaperAction}\r\n                  />\r\n                </StackItem>\r\n                <StackItem grow={2} className={classNames.paperFrame}>\r\n                  <ScrollablePane\r\n                    scrollbarVisibility={ScrollbarVisibility.auto}\r\n                  >\r\n                    <Sticky stickyPosition={StickyPositionType.Header}>\r\n                      <Stack\r\n                        tokens={{ padding: \"15px 15px 0\", childrenGap: 5 }}\r\n                      >\r\n                        <Pivot\r\n                          selectedKey={selectedTabId}\r\n                          onLinkClick={this.handleTabLinkClick}\r\n                          headersOnly={true}\r\n                          linkFormat={PivotLinkFormat.tabs}\r\n                        >\r\n                          <PivotItem\r\n                            itemKey={\"searchResultsList\"}\r\n                            itemIcon=\"AllApps\"\r\n                            headerText=\"Paper Pool\"\r\n                            itemCount={searchResultsList.length}\r\n                          ></PivotItem>\r\n                          <PivotItem\r\n                            itemKey={\"relevantList\"}\r\n                            itemIcon=\"Accept\"\r\n                            headerText=\"Relevant Paper\"\r\n                            itemCount={relevantList.length}\r\n                          ></PivotItem>\r\n                          <PivotItem\r\n                            itemKey={\"notRelevantList\"}\r\n                            itemIcon=\"StatusCircleErrorX\"\r\n                            headerText=\"Not Relevant\"\r\n                            itemCount={notRelevantList.length}\r\n                          ></PivotItem>\r\n                        </Pivot>\r\n                        {isLoading && (\r\n                          <ProgressIndicator\r\n                            label=\"We're Loading\"\r\n                            description=\"Lots of data from semantic Scholar\"\r\n                          />\r\n                        )}\r\n                        {apiError && (\r\n                          <MessageBar\r\n                            messageBarType={MessageBarType.error}\r\n                            isMultiline={false}\r\n                            onDismiss={this.closeMessageBar}\r\n                            dismissButtonAriaLabel=\"Close\"\r\n                          >\r\n                            {apiError}\r\n                            <Link\r\n                              href=\"https://github.com/dtdi/citetool/wiki/API-Key\"\r\n                              target=\"_blank\"\r\n                            >\r\n                              Did you provide your API Key?\r\n                            </Link>\r\n                          </MessageBar>\r\n                        )}\r\n                      </Stack>\r\n                    </Sticky>\r\n                    <Stack style={{ padding: 15 }}>\r\n                      <ResultList\r\n                        items={listItems}\r\n                        selectedKey={selectedPaper && selectedPaper.key}\r\n                        isLoading={isLoading}\r\n                        ref={this.listRef}\r\n                        onSelectSingle={this.onSelectSingle}\r\n                      />\r\n                    </Stack>\r\n                  </ScrollablePane>\r\n                </StackItem>\r\n              </Stack>\r\n            </Stack>\r\n          </StackItem>\r\n        </Stack>\r\n      </>\r\n    );\r\n  }\r\n\r\n  async loadSemScholarForMany(items) {\r\n    const controller = new AbortController();\r\n    const signal = controller.signal;\r\n\r\n    items = await Promise.all(\r\n      items.map(async (paper) => {\r\n        const semScholar = await this.loadSemScholar(\r\n          paper.doi,\r\n          controller,\r\n          signal\r\n        );\r\n        if (!semScholar) {\r\n          return paper;\r\n        }\r\n        const newPaper = {\r\n          abstract: semScholar.abstract,\r\n          refs: semScholar.references || [],\r\n          cites: semScholar.citations || [],\r\n          authors: semScholar.authors\r\n            ? semScholar.authors.map((author) => author.name).join(\", \")\r\n            : paper.authors,\r\n          ids: semScholar.references\r\n            ? semScholar.references.map((ref) => {\r\n                return ref.doi || ref.paperId;\r\n              })\r\n            : [],\r\n        };\r\n\r\n        const updatedPaper = {\r\n          ...paper,\r\n          ...newPaper,\r\n        };\r\n        updatedPaper.raw.semScholar = semScholar;\r\n\r\n        return updatedPaper;\r\n      })\r\n    );\r\n    return items;\r\n  }\r\n\r\n  async processSearchResults(result) {\r\n    let items = [];\r\n\r\n    if (!result || !result[\"search-results\"]) {\r\n      return;\r\n    }\r\n\r\n    const searchResults = result[\"search-results\"];\r\n\r\n    const searchQuery = searchResults[\"opensearch:Query\"][\"@searchTerms\"];\r\n\r\n    const entries = searchResults.entry;\r\n\r\n    const { paperList: oldItems } = this.state;\r\n\r\n    entries.forEach((entry) => {\r\n      let newDOI = !oldItems.some((item) => item.doi === entry[\"prism:doi\"]);\r\n      if (newDOI) {\r\n        let abstractlink = \"test\";\r\n        let links = entry[\"link\"];\r\n        links.forEach((link) => {\r\n          let linktype = link[\"@ref\"];\r\n          if (linktype === \"scopus\") {\r\n            abstractlink = link[\"@href\"];\r\n          }\r\n        });\r\n\r\n        items.push({\r\n          key: entry[\"prism:doi\"] || entry[\"dc:identifier\"],\r\n          name: entry[\"dc:title\"],\r\n          abstractlink: abstractlink,\r\n          abstract: null,\r\n          refs: [],\r\n          cites: [],\r\n          ids: [],\r\n          authors: entry[\"dc:creator\"], // @todo: replace with full list of authors.\r\n          publication: `${entry[\"prism:publicationName\"]} ${entry[\"prism:volume\"]}`,\r\n          year: entry[\"prism:coverDate\"].substr(0, 4),\r\n          doi: entry[\"prism:doi\"],\r\n          type: entry[\"subtypeDescription\"],\r\n          citedByCount: entry[\"citedby-count\"],\r\n          inBatch: [this.state.searchString],\r\n          raw: {\r\n            scopusEntry: entry,\r\n            semScholar: null,\r\n          },\r\n          inList: LIST_RESULT,\r\n        });\r\n      }\r\n    });\r\n\r\n    items = await this.loadSemScholarForMany(items);\r\n\r\n    // add to existing papers if exisiting\r\n    items.push(...oldItems);\r\n\r\n    items = this.getPaperScores(items);\r\n    items = items.sort((a, b) => b.relevance - a.relevance);\r\n\r\n    this.setState({\r\n      searchString: searchQuery,\r\n      paperList: items,\r\n      isLoading: false,\r\n    });\r\n    this.onSelectSingle(items[0]);\r\n  }\r\n\r\n  getPaperScores(papers) {\r\n    //Build matrix (Step1) -> direct references.\r\n    /** @description matrix for direct references */\r\n    let matrix = new Array(papers.length);\r\n    const paperIds = papers.map((paper) => paper.doi);\r\n    papers.forEach((paper, i) => {\r\n      let row = new Array(papers.length).fill(0);\r\n      paper.ids.forEach((id) => {\r\n        let idx = paperIds.indexOf(id);\r\n        if (idx !== -1) row[idx] = 1;\r\n      });\r\n      matrix[i] = row;\r\n    });\r\n\r\n    /** @description Lookup-Array - determines whether a paper is in list relevant or not. */\r\n    let isRelevant = papers.map((paper) => paper.inList === LIST_RELEVANT);\r\n\r\n    /**\r\n     * summarize all citations within the set of papers\r\n     */\r\n\r\n    papers = papers.map((p) => {\r\n      return {\r\n        ...p,\r\n        ...{\r\n          refs_relevant: 0,\r\n          refs_pool: 0,\r\n          cited_relevant: 0,\r\n          cited_pool: 0,\r\n          cocit_pool: 0,\r\n          cocit_relevant: 0,\r\n          bibcup_pool: 0,\r\n          bibcup_relevant: 0,\r\n        },\r\n      };\r\n    });\r\n\r\n    const m = {};\r\n\r\n    // each paper\r\n    for (let i = 0; i < papers.length; i++) {\r\n      // each column\r\n      for (let j = 0; j < papers.length; j++) {\r\n        //Referencing Count - a)\r\n        if (matrix[i][j] === 1) {\r\n          if (isRelevant[j]) {\r\n            papers[i].refs_relevant++;\r\n          } else {\r\n            papers[i].refs_pool++;\r\n          }\r\n        }\r\n        //Referenced Count - b)\r\n        if (matrix[j][i] === 1) {\r\n          if (isRelevant[j]) {\r\n            papers[i].cited_relevant++;\r\n          } else {\r\n            papers[i].cited_pool++;\r\n          }\r\n        }\r\n        // each row\r\n        for (let k = 0; k < papers.length; k++) {\r\n          // cocitation: how often has a paper been co-cited? - c)\r\n          if (matrix[j][i] === 1 && matrix[j][k] === 1 && i !== k) {\r\n            if (isRelevant[k]) {\r\n              papers[i].cocit_relevant++;\r\n            } else {\r\n              papers[i].cocit_pool++;\r\n            }\r\n          }\r\n          // bibcoupling: - d)\r\n          if (matrix[i][j] === 1 && matrix[k][j] === 1 && i !== k) {\r\n            if (isRelevant[k]) {\r\n              papers[i].bibcup_relevant++;\r\n            } else {\r\n              papers[i].bibcup_pool++;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const relevantKpis = papers.filter((_, i) => isRelevant[i]);\r\n    const poolKpis = papers.filter((_, i) => !isRelevant[i]);\r\n\r\n    m.poolPoolRefs = Math.max(1, ...poolKpis.map((l) => l.refs_pool));\r\n    m.poolPoolCited = Math.max(1, ...poolKpis.map((l) => l.cited_pool));\r\n    m.poolPoolCocit = Math.max(1, ...poolKpis.map((l) => l.cocit_pool));\r\n    m.poolPoolBibcup = Math.max(1, ...poolKpis.map((l) => l.bibcup_pool));\r\n\r\n    m.relRelRefs = Math.max(1, ...relevantKpis.map((l) => l.refs_relevant));\r\n    m.relRelCited = Math.max(1, ...relevantKpis.map((l) => l.cited_relevant));\r\n    m.relRelCocit = Math.max(1, ...relevantKpis.map((l) => l.cocit_relevant));\r\n    m.relRelBibcup = Math.max(1, ...relevantKpis.map((l) => l.bibcup_relevant));\r\n\r\n    m.poolRelRefs = Math.max(1, ...poolKpis.map((l) => l.refs_relevant));\r\n    m.poolRelCited = Math.max(1, ...poolKpis.map((l) => l.cited_relevant));\r\n    m.poolRelCocit = Math.max(1, ...poolKpis.map((l) => l.cocit_relevant));\r\n    m.poolRelBibcup = Math.max(1, ...poolKpis.map((l) => l.bibcup_relevant));\r\n\r\n    papers.forEach((paper, i) => {\r\n      if (isRelevant[i]) {\r\n        paper.refs_relevant /= m.relRelRefs;\r\n        paper.cited_relevant /= m.relRelCited;\r\n        paper.cocit_relevant /= m.relRelCocit;\r\n        paper.bibcup_relevant /= m.relRelBibcup;\r\n\r\n        delete paper.refs_pool;\r\n        delete paper.cited_pool;\r\n        delete paper.cocit_pool;\r\n        delete paper.bibcup_pool;\r\n\r\n        paper.relevance =\r\n          (paper.refs_relevant +\r\n            paper.cited_relevant +\r\n            paper.cocit_relevant +\r\n            paper.bibcup_relevant) /\r\n          4;\r\n      } else {\r\n        paper.refs_pool /= m.poolPoolRefs;\r\n        paper.cited_pool /= m.poolPoolCited;\r\n        paper.cocit_pool /= m.poolPoolCocit;\r\n        paper.bibcup_pool /= m.poolPoolBibcup;\r\n\r\n        paper.refs_relevant /= m.poolRelRefs;\r\n        paper.cited_relevant /= m.poolRelCited;\r\n        paper.cocit_relevant /= m.poolRelCocit;\r\n        paper.bibcup_relevant /= m.poolRelBibcup;\r\n\r\n        paper.relevance =\r\n          (paper.refs_relevant +\r\n            paper.cited_relevant +\r\n            paper.cocit_relevant +\r\n            paper.bibcup_relevant +\r\n            paper.refs_pool +\r\n            paper.cited_pool +\r\n            paper.cocit_pool +\r\n            paper.bibcup_pool) /\r\n          8;\r\n      }\r\n    });\r\n    return papers;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n// import reportWebVitals from \"./reportWebVitals\";\r\nimport { mergeStyles, initializeIcons } from \"@fluentui/react\";\r\n\r\nimport * as Sentry from \"@sentry/react\";\r\nimport { Integrations } from \"@sentry/tracing\";\r\n\r\nSentry.init({\r\n  dsn:\r\n    \"https://6b5e57b77ebf466980c9e68d76da6978@o503871.ingest.sentry.io/5589576\",\r\n\r\n  autoSessionTracking: true,\r\n  integrations: [new Integrations.BrowserTracing()],\r\n\r\n  // We recommend adjusting this value in production, or using tracesSampler\r\n  // for finer control\r\n  tracesSampleRate: 1.0,\r\n});\r\n\r\n// Inject some global styles\r\nmergeStyles({\r\n  selectors: {\r\n    \":global(body), :global(html), :global(#app)\": {\r\n      margin: 0,\r\n      padding: 0,\r\n      height: \"100vh\",\r\n      overflow: \"hidden\",\r\n    },\r\n  },\r\n});\r\n\r\ninitializeIcons();\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals(console.log);\r\n"],"sourceRoot":""}