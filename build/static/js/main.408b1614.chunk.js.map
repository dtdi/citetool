{"version":3,"sources":["app/components/ResultList.js","app/components/DetailsFrame.js","img/header.jpg","app/components/ApiModal.js","App.js","index.js"],"names":["ResultList","props","_onColumnClick","ev","column","columns","state","items","newColumns","slice","currColumn","filter","currCol","key","forEach","newCol","isSortedDescending","isSorted","setState","announcedMessage","name","newItems","columnKey","sort","a","b","_copyAndSort","fieldName","onSelectSingle","minWidth","maxWidth","onColumnClick","onRender","item","relevance","toFixed","data","isPadded","sortAscendingAriaLabel","sortDescendingAriaLabel","isMultiline","authors","year","_selection","Selection","onSelectionChanged","getSelectedCount","getSelection","selectedItem","isModalSelection","isCompactMode","this","isLoading","ShimmeredDetailsList","enableShimmer","length","compact","selectionMode","SelectionMode","single","getKey","_getKey","setKey","layoutMode","DetailsListLayoutMode","fixedColumns","isHeaderVisible","selection","selectionPreservedOnEmptyClick","enterModalSelectionOnTouch","ariaLabelForSelectionColumn","ariaLabelForSelectAllCheckbox","checkButtonAriaLabel","index","Component","DetailsFrame","ShimmerElementsGroup","flexWrap","style","width","shimmerElements","type","ShimmerElementType","line","selectedPaper","onPaperAction","Stack","tokens","childrenGap","horizontal","horizontalAlign","inList","LIST_RESULT","PrimaryButton","text","iconProps","iconName","onClick","LIST_RELEVANT","LIST_NOT_RELEVANT","DefaultButton","Shimmer","height","isDataLoaded","Text","variant","gap","publication","customElementsGroup","customElements","abstract","Link","target","href","abstractlink","doi","citedByCount","refs","theme","getTheme","ApiModal","isOpen","onClose","apiKey","onApiKeyChange","onClearCache","Modal","isBlocking","containerClassName","contentStyles","container","className","header","IconButton","styles","iconButtonStyles","ariaLabel","body","verticalAlign","TextField","label","value","onChange","mergeStyleSets","display","flexFlow","alignItems","fonts","xLarge","flex","borderTop","palette","themePrimary","color","neutralPrimary","fontWeight","FontWeights","semibold","padding","overflowY","root","marginLeft","marginTop","marginRight","rootHovered","neutralDark","classNames","paperFrame","background","white","searchBar","PaperCache","prefix","encodeURIComponent","controller","signal","get","fetch","response","TypeError","abort","ok","status","json","set","console","log","message","Error","del","App","elem","clear","loadSemScholar","cache","getOrLoad","onLoadData","searchString","query","count","limit","start","totalResults","error","statusCode","statusText","errorState","apiError","results","Number","paperList","entry","push","result","processSearchResults","handleTabLinkClick","selectedTabId","itemKey","newPaper","action","newList","paper","map","p","oldPaper","find","inBatch","paperId","title","cites","raw","ids","author","join","venue","loadSemScholarForMany","getPaperScores","onSettingsOpenClose","isApiKeyModalOpen","newVal","closeMessageBar","toggleSearchHelper","isSearchHelper","clearSearch","searchResultsList","relevantList","notRelevantList","lastSearch","listType","prevProps","prevState","_filterPapers","listItems","_items","disabled","_overflowItems","_farItems","iconOnly","Image","src","alt","StackItem","SearchBox","placeholder","onSearch","id","TeachingBubble","hasCloseButton","closeButtonAriaLabel","primaryButtonProps","children","onDismiss","headline","CommandBar","overflowItems","overflowButtonProps","farItems","disableShrink","grow","Pivot","selectedKey","onLinkClick","headersOnly","linkFormat","PivotLinkFormat","tabs","PivotItem","itemIcon","headerText","itemCount","ProgressIndicator","description","MessageBar","messageBarType","MessageBarType","dismissButtonAriaLabel","AbortController","Promise","all","semScholar","references","citations","ref","updatedPaper","searchResults","searchQuery","link","substr","scopusEntry","oldItems","papers","matrix","Array","paperIds","i","row","fill","idx","indexOf","isRelevant","refs_relevant","refs_pool","cited_relevant","cited_pool","cocit_pool","cocit_relevant","bibcup_pool","bibcup_relevant","m","j","k","relevantKpis","_","poolKpis","poolPoolRefs","Math","max","l","poolPoolCited","poolPoolCocit","poolPoolBibcup","relRelRefs","relRelCited","relRelCocit","relRelBibcup","poolRelRefs","poolRelCited","poolRelCocit","poolRelBibcup","Sentry","dsn","autoSessionTracking","integrations","Integrations","BrowserTracing","tracesSampleRate","mergeStyles","selectors","margin","initializeIcons","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.408b1614.chunk.js","sourcesContent":["import {\r\n  ShimmeredDetailsList,\r\n  Selection,\r\n  SelectionMode,\r\n  DetailsListLayoutMode,\r\n  mergeStyleSets,\r\n} from \"@fluentui/react\";\r\n\r\nimport React, { Component } from \"react\";\r\n\r\nexport default class ResultList extends Component {\r\n  _selection;\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { onSelectSingle } = this.props;\r\n\r\n    const columns = [\r\n      {\r\n        key: \"column1\",\r\n        name: \"Relevance\",\r\n        fieldName: \"relevance\",\r\n        minWidth: 30,\r\n        maxWidth: 50,\r\n        isSorted: true,\r\n        isSortedDescending: true,\r\n        onColumnClick: this._onColumnClick,\r\n        onRender: (item) => {\r\n          return <span>{(item.relevance * 100).toFixed(2) + \"%\"}</span>;\r\n        },\r\n        data: \"string\",\r\n        isPadded: true,\r\n      },\r\n      {\r\n        key: \"column2\",\r\n        name: \"Name\",\r\n        fieldName: \"name\",\r\n        maxWidth: 350,\r\n        sortAscendingAriaLabel: \"Sorted A to Z\",\r\n        sortDescendingAriaLabel: \"Sorted Z to A\",\r\n        onColumnClick: this._onColumnClick,\r\n        data: \"string\",\r\n        isPadded: true,\r\n        isMultiline: true,\r\n      },\r\n      {\r\n        key: \"column3\",\r\n        name: \"Author/Year\",\r\n        fieldName: \"authors\",\r\n        minWidth: 75,\r\n        maxWidth: 150,\r\n        onColumnClick: this._onColumnClick,\r\n        data: \"string\",\r\n        onRender: (item) => {\r\n          return (\r\n            <span>\r\n              {item.authors} ({item.year})\r\n            </span>\r\n          );\r\n        },\r\n        isPadded: true,\r\n        isMultiline: true,\r\n      },\r\n    ];\r\n\r\n    this._selection = new Selection({\r\n      onSelectionChanged: () => {\r\n        const selectionCount = this._selection.getSelectedCount();\r\n        if (selectionCount === 1) {\r\n          onSelectSingle(this._selection.getSelection()[0]);\r\n        }\r\n      },\r\n    });\r\n\r\n    this.state = {\r\n      announcedMessage: null,\r\n      columns: columns,\r\n      selectedItem: null,\r\n      isModalSelection: false,\r\n      isCompactMode: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { columns } = this.state;\r\n\r\n    const { items, isLoading } = this.props;\r\n\r\n    return (\r\n      <ShimmeredDetailsList\r\n        items={items}\r\n        enableShimmer={isLoading || items.length === 0}\r\n        compact={false}\r\n        onColumnClick={this._onColumnClick}\r\n        columns={columns}\r\n        selectionMode={SelectionMode.single}\r\n        getKey={this._getKey}\r\n        setKey=\"multiple\"\r\n        layoutMode={DetailsListLayoutMode.fixedColumns}\r\n        isHeaderVisible={true}\r\n        selection={this._selection}\r\n        selectionPreservedOnEmptyClick={true}\r\n        enterModalSelectionOnTouch={true}\r\n        ariaLabelForSelectionColumn=\"Toggle selection\"\r\n        ariaLabelForSelectAllCheckbox=\"Toggle selection for all items\"\r\n        checkButtonAriaLabel=\"Row checkbox\"\r\n      />\r\n    );\r\n  }\r\n\r\n  _getKey(item, index) {\r\n    return item ? item.key : index;\r\n  }\r\n\r\n  _onColumnClick = (ev, column) => {\r\n    const { columns } = this.state;\r\n    const { items } = this.props;\r\n    const newColumns = columns.slice();\r\n    const currColumn = newColumns.filter(\r\n      (currCol) => column.key === currCol.key\r\n    )[0];\r\n    newColumns.forEach((newCol) => {\r\n      if (newCol === currColumn) {\r\n        currColumn.isSortedDescending = !currColumn.isSortedDescending;\r\n        currColumn.isSorted = true;\r\n        this.setState({\r\n          announcedMessage: `${currColumn.name} is sorted ${\r\n            currColumn.isSortedDescending ? \"descending\" : \"ascending\"\r\n          }`,\r\n        });\r\n      } else {\r\n        newCol.isSorted = false;\r\n        newCol.isSortedDescending = true;\r\n      }\r\n    });\r\n    const newItems = _copyAndSort(\r\n      items,\r\n      currColumn.fieldName,\r\n      currColumn.isSortedDescending\r\n    );\r\n    this.setState({\r\n      columns: newColumns,\r\n      items: newItems,\r\n    });\r\n  };\r\n}\r\n\r\nfunction _copyAndSort(items, columnKey, isSortedDescending) {\r\n  const key = columnKey;\r\n  return items\r\n    .slice(0)\r\n    .sort((a, b) =>\r\n      (isSortedDescending ? a[key] < b[key] : a[key] > b[key]) ? 1 : -1\r\n    );\r\n}\r\n","import {\r\n  Stack,\r\n  DefaultButton,\r\n  PrimaryButton,\r\n  mergeStyleSets,\r\n  Link,\r\n  Shimmer,\r\n  ShimmerElementsGroup,\r\n  ShimmerElementType,\r\n  Text,\r\n} from \"@fluentui/react\";\r\nimport React, { Component } from \"react\";\r\nimport { LIST_NOT_RELEVANT, LIST_RELEVANT, LIST_RESULT } from \"../../App\";\r\n\r\nexport default class DetailsFrame extends Component {\r\n  customElements() {\r\n    return (\r\n      <ShimmerElementsGroup\r\n        flexWrap\r\n        style\r\n        width=\"100%\"\r\n        shimmerElements={[\r\n          { type: ShimmerElementType.line },\r\n          { type: ShimmerElementType.line },\r\n          { type: ShimmerElementType.line },\r\n          { type: ShimmerElementType.line },\r\n          { type: ShimmerElementType.line },\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n  render() {\r\n    const { selectedPaper, onPaperAction, isLoading } = this.props;\r\n    if (!selectedPaper) {\r\n      return (\r\n        <Stack>\r\n          <Text>Howdy, Partner!</Text>\r\n          <Text>\r\n            This website helps to discover exciting new papers in three easy\r\n            steps:\r\n            <ol>\r\n              <li>\r\n                To get started, use the search box above to start a search query\r\n                on Scopus.\r\n              </li>\r\n              <li>\r\n                Based on the results, we suggest relevant papers on the left,\r\n                which you can mark as relevant or irrelevant using the buttons\r\n                at the top. Your vote will automatically move the paper to the\r\n                lists on the right side of the page. Based on the papers you\r\n                rated as relevant, we will suggest new papers to rate. For this\r\n                purpose, we use bibliometric data (i.e., co-citation &\r\n                bibliometric coupling) to find papers that have a particularly\r\n                high overlap with your selection.\r\n              </li>\r\n              <li>\r\n                If you have identified enough papers or if our suggestions do\r\n                not contain any more relevant papers, use the download function\r\n                in the header to export your results as a list.\r\n              </li>\r\n            </ol>\r\n          </Text>\r\n        </Stack>\r\n      );\r\n    }\r\n    return (\r\n      <Stack tokens={{ childrenGap: 5 }}>\r\n        <Stack\r\n          horizontal\r\n          horizontalAlign={\"space-evenly\"}\r\n          tokens={{ childrenGap: 5 }}\r\n        >\r\n          {selectedPaper.inList !== LIST_RESULT && (\r\n            <PrimaryButton\r\n              text=\"Back to Pool\"\r\n              iconProps={{ iconName: \"RevToggleKey\" }}\r\n              onClick={() => {\r\n                onPaperAction(selectedPaper, \"move-to-result\");\r\n              }}\r\n            />\r\n          )}\r\n          {selectedPaper.inList !== LIST_RELEVANT && (\r\n            <PrimaryButton\r\n              text=\"Mark relevant\"\r\n              iconProps={{ iconName: \"Accept\" }}\r\n              onClick={() => {\r\n                onPaperAction(selectedPaper, \"move-to-relevant\");\r\n              }}\r\n            />\r\n          )}\r\n          {selectedPaper.inList !== LIST_NOT_RELEVANT && (\r\n            <DefaultButton\r\n              text=\"Mark not relevant\"\r\n              iconProps={{ iconName: \"StatusCircleErrorX\" }}\r\n              onClick={() => {\r\n                onPaperAction(selectedPaper, \"move-to-not-relevant\");\r\n              }}\r\n            />\r\n          )}\r\n        </Stack>\r\n\r\n        <Shimmer\r\n          shimmerElements={[{ type: ShimmerElementType.line, height: 22 }]}\r\n          width={\"80%\"}\r\n          isDataLoaded={!isLoading}\r\n        >\r\n          <Text variant={\"mediumPlus\"}>{selectedPaper.name}</Text>\r\n        </Shimmer>\r\n        <Shimmer\r\n          shimmerElements={[\r\n            { type: ShimmerElementType.line, width: \"15%\" },\r\n            { type: ShimmerElementType.gap, width: 10 },\r\n            { type: ShimmerElementType.line, width: \"80%\" },\r\n          ]}\r\n          width={\"60%\"}\r\n          isDataLoaded={!isLoading}\r\n        >\r\n          <Text>\r\n            <b>Authors:</b> <i>{selectedPaper.authors}</i>\r\n          </Text>\r\n        </Shimmer>\r\n        <Shimmer\r\n          isDataLoaded={!isLoading}\r\n          shimmerElements={[\r\n            { type: ShimmerElementType.line, width: \"5%\" },\r\n            { type: ShimmerElementType.gap, width: 10 },\r\n            { type: ShimmerElementType.line, width: \"90%\" },\r\n          ]}\r\n        >\r\n          <Text>\r\n            <b>In:</b> <i>{selectedPaper.publication}</i>\r\n          </Text>\r\n        </Shimmer>\r\n\r\n        <Shimmer\r\n          customElementsGroup={this.customElements()}\r\n          isDataLoaded={!isLoading}\r\n        >\r\n          <Text>{selectedPaper.abstract}</Text>\r\n        </Shimmer>\r\n\r\n        <Stack\r\n          horizontal\r\n          horizontalAlign=\"space-between\"\r\n          tokens={{ childrenGap: 5 }}\r\n        >\r\n          <Text>\r\n            <b>Year:</b> {selectedPaper.year}\r\n          </Text>\r\n          <Text>\r\n            <b>Type:</b> {selectedPaper.type}\r\n          </Text>\r\n          <Text>\r\n            <b>DOI:</b>{\" \"}\r\n            <Link target={\"_blank\"} href={selectedPaper.abstractlink}>\r\n              {selectedPaper.doi}\r\n            </Link>\r\n          </Text>\r\n        </Stack>\r\n        <Stack\r\n          horizontal\r\n          horizontalAlign=\"space-between\"\r\n          tokens={{ childrenGap: 10 }}\r\n        >\r\n          <Text>\r\n            <b>Relevance Score:</b>{\" \"}\r\n            {(selectedPaper.relevance * 100).toFixed(2) + \"%\"}\r\n          </Text>\r\n          <Text>\r\n            <b>#Cited-by:</b> {selectedPaper.citedByCount}\r\n          </Text>\r\n          <Text>\r\n            <b>#References:</b> {selectedPaper.refs.length}\r\n          </Text>\r\n        </Stack>\r\n      </Stack>\r\n    );\r\n  }\r\n}\r\n","export default __webpack_public_path__ + \"static/media/header.56f2f34e.jpg\";","import {\r\n  Modal,\r\n  IconButton,\r\n  Stack,\r\n  Text,\r\n  TextField,\r\n  mergeStyleSets,\r\n  DefaultButton,\r\n  getTheme,\r\n  Link,\r\n  FontWeights,\r\n  PrimaryButton,\r\n} from \"@fluentui/react\";\r\n\r\nconst theme = getTheme();\r\n\r\nexport default function ApiModal(props) {\r\n  const { isOpen, onClose, apiKey, onApiKeyChange, onClearCache } = props;\r\n\r\n  return (\r\n    <Modal\r\n      isOpen={isOpen}\r\n      isBlocking={false}\r\n      containerClassName={contentStyles.container}\r\n    >\r\n      <div className={contentStyles.header}>\r\n        <Text>Welcome to Potatosearch</Text>\r\n        <IconButton\r\n          styles={iconButtonStyles}\r\n          iconProps={{ iconName: \"Cancel\" }}\r\n          ariaLabel=\"Close popup modal\"\r\n          onClick={onClose}\r\n        />\r\n      </div>\r\n      <div className={contentStyles.body}>\r\n        <Stack tokens={{ childrenGap: 5 }}>\r\n          <Text variant=\"mediumPlus\">\r\n            This website helps to discover exciting new papers in three easy\r\n            steps:\r\n          </Text>\r\n          <Text>\r\n            <ol>\r\n              <li>\r\n                To get started, use the search box above to start a search query\r\n                on Scopus.\r\n              </li>\r\n              <li>\r\n                Based on the results, we suggest relevant papers on the left,\r\n                which you can mark as relevant or irrelevant using the buttons\r\n                at the top. Your vote will automatically move the paper to the\r\n                lists on the right side of the page. Based on the papers you\r\n                rated as relevant, we will suggest new papers to rate. For this\r\n                purpose, we use bibliometric data (i.e., co-citation &\r\n                bibliometric coupling) to find papers that have a particularly\r\n                high overlap with your selection.\r\n              </li>\r\n              <li>\r\n                If you have identified enough papers or if our suggestions do\r\n                not contain any more relevant papers, use the download function\r\n                in the header to export your results as a list.\r\n              </li>\r\n            </ol>\r\n          </Text>\r\n          <Text variant=\"mediumPlus\">\r\n            Before you start: Please provide your Scopus API-Key:\r\n          </Text>\r\n          <Link\r\n            href=\"https://github.com/dtdi/citetool/wiki/API-Key\"\r\n            target=\"_blank\"\r\n          >\r\n            Read here, how to obtain and configure your api key.\r\n          </Link>\r\n          <Stack horizontal verticalAlign=\"end\" tokens={{ childrenGap: 10 }}>\r\n            <TextField\r\n              label=\"Provide in your API Code\"\r\n              style={{ width: 300 }}\r\n              value={apiKey}\r\n              onChange={onApiKeyChange}\r\n            />\r\n            <PrimaryButton onClick={onClose}>Save</PrimaryButton>\r\n            <DefaultButton onClick={onClearCache}>Clear Cache</DefaultButton>\r\n          </Stack>\r\n        </Stack>\r\n      </div>\r\n    </Modal>\r\n  );\r\n}\r\nconst contentStyles = mergeStyleSets({\r\n  container: {\r\n    display: \"flex\",\r\n    flexFlow: \"column nowrap\",\r\n    alignItems: \"stretch\",\r\n    width: \"1000px\",\r\n    maxWidth: \"100%\",\r\n  },\r\n  header: [\r\n    theme.fonts.xLarge,\r\n    {\r\n      flex: \"1 1 auto\",\r\n      borderTop: `4px solid ${theme.palette.themePrimary}`,\r\n      color: theme.palette.neutralPrimary,\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      fontWeight: FontWeights.semibold,\r\n      padding: \"12px 12px 14px 24px\",\r\n    },\r\n  ],\r\n  body: {\r\n    flex: \"4 4 auto\",\r\n    padding: \"0 24px 24px 24px\",\r\n    overflowY: \"hidden\",\r\n  },\r\n});\r\n\r\nconst iconButtonStyles = {\r\n  root: {\r\n    color: theme.palette.neutralPrimary,\r\n    marginLeft: \"auto\",\r\n    marginTop: \"4px\",\r\n    marginRight: \"2px\",\r\n  },\r\n  rootHovered: {\r\n    color: theme.palette.neutralDark,\r\n  },\r\n};\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Stack,\r\n  StackItem,\r\n  CommandBar,\r\n  Pivot,\r\n  PivotItem,\r\n  Image,\r\n  mergeStyleSets,\r\n  Text,\r\n  SearchBox,\r\n  IconButton,\r\n  TeachingBubble,\r\n  PivotLinkFormat,\r\n  ProgressIndicator,\r\n  Link,\r\n  MessageBar,\r\n  MessageBarType,\r\n  getTheme,\r\n} from \"@fluentui/react\";\r\n\r\nimport { get, set, del, clear } from \"idb-keyval\";\r\n\r\n// import result from \"./data/scopusresult.json\";\r\n\r\nimport ResultList from \"./app/components/ResultList\";\r\nimport DetailsFrame from \"./app/components/DetailsFrame\";\r\nimport header from \"./img/header.jpg\";\r\nimport \"./style.css\";\r\n\r\nimport ApiModal from \"./app/components/ApiModal\";\r\n\r\nconst theme = getTheme();\r\nconst classNames = mergeStyleSets({\r\n  paperFrame: {\r\n    width: \"40vw\",\r\n    padding: 20,\r\n    background: theme.palette.white,\r\n  },\r\n  searchBar: {\r\n    background: theme.palette.white,\r\n  },\r\n});\r\n\r\nexport const LIST_RESULT = \"result\";\r\nexport const LIST_RELEVANT = \"relevant\";\r\nexport const LIST_NOT_RELEVANT = \"not-relevant\";\r\n\r\nclass PaperCache {\r\n  prefix = \"paper_\";\r\n\r\n  _getKey(doi) {\r\n    return this.prefix + encodeURIComponent(doi);\r\n  }\r\n\r\n  async getOrLoad(doi, controller, signal) {\r\n    const key = this._getKey(doi);\r\n    const item = await get(key);\r\n    if (item) {\r\n      return item;\r\n    } else {\r\n      let response;\r\n      try {\r\n        response = await fetch(\r\n          `https://api.semanticscholar.org/v1/paper/${doi}?include_unknown_references=true`,\r\n          { signal }\r\n        );\r\n      } catch (e) {\r\n        if (e instanceof TypeError) {\r\n          controller.abort();\r\n          throw e;\r\n        } else {\r\n          throw e;\r\n          return;\r\n        }\r\n      }\r\n      if (!response.ok) {\r\n        if (response.status === 404) {\r\n          const body = await response.json();\r\n          set(key, body);\r\n          console.log(404);\r\n          return body;\r\n        } else {\r\n          const message = `An error has occured: ${response.status}`;\r\n          throw new Error(message);\r\n        }\r\n      }\r\n      const body = await response.json();\r\n      try {\r\n        set(key, body);\r\n      } catch (e) {\r\n        const message = `Unknown error`;\r\n        throw new Error(message, e);\r\n      }\r\n      return body;\r\n    }\r\n  }\r\n\r\n  remove(doi) {\r\n    del(this._getKey(doi));\r\n  }\r\n}\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      paperList: [],\r\n      selectedPaper: null,\r\n      isSearchHelper: false,\r\n      searchResultsList: [],\r\n      relevantList: [],\r\n      notRelevantList: [],\r\n      selectedTabId: \"searchResultsList\",\r\n      apiKey: \"\",\r\n      isApiKeyModalOpen: false,\r\n      isLoading: false,\r\n      searchString: `TITLE-ABS-KEY(\"heart attack\")`,\r\n    };\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const lastSearch = await get(\"lastSearch\");\r\n    const apiKey = await get(\"apiKey\");\r\n    if (apiKey) {\r\n      this.setState({\r\n        apiKey: apiKey,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        isApiKeyModalOpen: true,\r\n      });\r\n    }\r\n    if (lastSearch) {\r\n      this.setState({ isLoading: true, searchString: lastSearch.searchString });\r\n      await this.processSearchResults(lastSearch.result);\r\n      this.setState({ isLoading: false });\r\n    }\r\n  }\r\n\r\n  _filterPapers(listType) {\r\n    const { paperList } = this.state;\r\n    return paperList.filter((paper) => {\r\n      return paper.inList === listType;\r\n    });\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevState.paperList !== this.state.paperList) {\r\n      this.setState({\r\n        searchResultsList: this._filterPapers(LIST_RESULT),\r\n        relevantList: this._filterPapers(LIST_RELEVANT),\r\n        notRelevantList: this._filterPapers(LIST_NOT_RELEVANT),\r\n      });\r\n    }\r\n  }\r\n\r\n  onSelectSingle = async (elem) => {\r\n    this.setState({\r\n      selectedPaper: elem,\r\n    });\r\n  };\r\n\r\n  onClearCache = async (ev) => {\r\n    clear();\r\n  };\r\n\r\n  loadSemScholar = async (doi, controller, signal) => {\r\n    let cache = new PaperCache();\r\n    try {\r\n      const item = await cache.getOrLoad(doi, controller, signal);\r\n      return item;\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  onLoadData = async (searchString) => {\r\n    this.setState({\r\n      isLoading: true,\r\n      selectedPaper: null,\r\n      searchString: searchString,\r\n    });\r\n    const { apiKey } = this.state;\r\n\r\n    const query = encodeURIComponent(searchString);\r\n    const count = 25;\r\n    const limit = 25;\r\n    let start = 0;\r\n    const sort = \"relevancy\";\r\n\r\n    let errorState;\r\n    let results;\r\n    let totalResults = 0;\r\n\r\n    do {\r\n      try {\r\n        const response = await fetch(\r\n          `https://api.elsevier.com/content/search/scopus?apiKey=${apiKey}&query=${query}&count=${count}&start=${start}&sort=${sort}`\r\n        );\r\n        if (!response.ok) {\r\n          let error = \"\";\r\n\r\n          if (response.status === 400) {\r\n            const body = await response.json();\r\n            error = `An error has occured (${response.status}) ${body[\"service-error\"].status.statusCode}: ${body[\"service-error\"].status.statusText}`;\r\n          } else {\r\n            error = `An error has occured (${response.status})`;\r\n          }\r\n\r\n          errorState = {\r\n            isLoading: false,\r\n            apiError: error,\r\n          };\r\n          break;\r\n        }\r\n\r\n        const body = await response.json();\r\n        if (!results) {\r\n          results = body;\r\n          totalResults = Number(\r\n            results[\"search-results\"][\"opensearch:totalResults\"]\r\n          );\r\n\r\n          if (totalResults === 0) {\r\n            errorState = {\r\n              isLoading: false,\r\n              paperList: [],\r\n              apiError: \"Search did not return any results\",\r\n            };\r\n            break;\r\n          }\r\n        } else {\r\n          results[\"search-results\"].entry.push(...body[\"search-results\"].entry);\r\n        }\r\n      } catch (e) {\r\n        errorState = {\r\n          isLoading: false,\r\n          apiError: e.message,\r\n        };\r\n        break;\r\n      }\r\n      start += count;\r\n    } while (start < limit && start <= totalResults);\r\n\r\n    if (errorState) {\r\n      this.setState(errorState);\r\n      return;\r\n    }\r\n    await set(\"lastSearch\", {\r\n      searchString: this.state.searchString,\r\n      result: results,\r\n    });\r\n    await this.processSearchResults(results);\r\n    this.setState({\r\n      isLoading: false,\r\n    });\r\n  };\r\n\r\n  handleTabLinkClick = (item) => {\r\n    this.setState({\r\n      selectedTabId: item.props.itemKey,\r\n    });\r\n  };\r\n\r\n  onPaperAction = async (newPaper, action) => {\r\n    const { paperList } = this.state;\r\n    this.setState({\r\n      isLoading: true,\r\n    });\r\n    let newList = paperList\r\n      .filter((paper) => {\r\n        return action !== \"remove-paper\" || newPaper.key !== paper.key;\r\n      })\r\n      .map((paper) => {\r\n        if (paper.key === newPaper.key) {\r\n          if (action === \"move-to-result\") {\r\n            newPaper.inList = LIST_RESULT;\r\n          } else if (action === \"move-to-relevant\") {\r\n            newPaper.inList = LIST_RELEVANT;\r\n          } else if (action === \"move-to-not-relevant\") {\r\n            newPaper.inList = LIST_NOT_RELEVANT;\r\n          } else if (action === \"update-paper\") {\r\n          }\r\n\r\n          const updatedPaper = {\r\n            ...paper,\r\n            ...newPaper,\r\n          };\r\n          return updatedPaper;\r\n        }\r\n        return paper;\r\n      });\r\n\r\n    if (action === \"move-to-relevant\") {\r\n      newPaper.refs.forEach((p) => {\r\n        const oldPaper = newList.find((oldPaper) => oldPaper.doi === p.doi);\r\n        if (oldPaper) {\r\n          oldPaper.inBatch.push(newPaper.doi);\r\n        } else {\r\n          newList.push({\r\n            key: p.doi || p.paperId,\r\n            name: p.title,\r\n            abstract: null,\r\n            refs: [],\r\n            cites: [],\r\n            raw: {},\r\n            ids: [],\r\n            authors: p.authors\r\n              ? p.authors.map((author) => author.name).join(\", \")\r\n              : \"\",\r\n            publication: p.venue,\r\n            year: p.year,\r\n            doi: p.doi,\r\n            type: null,\r\n            citedByCount: null,\r\n            inBatch: [newPaper.doi],\r\n            inList: LIST_RESULT,\r\n          });\r\n        }\r\n      });\r\n      newList = await this.loadSemScholarForMany(newList);\r\n    }\r\n\r\n    newList = this.getPaperScores(newList).sort(\r\n      (a, b) => b.relevance - a.relevance\r\n    );\r\n    this.setState({\r\n      paperList: newList,\r\n      isLoading: false,\r\n    });\r\n    this.onSelectSingle(newList[0]);\r\n  };\r\n\r\n  onSettingsOpenClose = () => {\r\n    const { isApiKeyModalOpen, apiKey } = this.state;\r\n    if (apiKey) {\r\n      set(\"apiKey\", apiKey);\r\n      this.setState({\r\n        isApiKeyModalOpen: !isApiKeyModalOpen,\r\n      });\r\n    } else {\r\n      const error = \"api key not provided.\";\r\n      this.setState(error);\r\n    }\r\n  };\r\n\r\n  onApiKeyChange = (ev, newVal) => {\r\n    this.setState({ apiKey: newVal });\r\n  };\r\n\r\n  closeMessageBar = (ev) => {\r\n    this.setState({ apiError: null });\r\n  };\r\n\r\n  toggleSearchHelper = (ev) => {\r\n    this.setState({ isSearchHelper: !this.state.isSearchHelper });\r\n  };\r\n\r\n  clearSearch = async (ev) => {\r\n    await del(\"lastSearch\");\r\n    this.setState({\r\n      paperList: [],\r\n      selectedPaper: null,\r\n      isSearchHelper: false,\r\n      searchResultsList: [],\r\n      relevantList: [],\r\n      notRelevantList: [],\r\n      selectedTabId: \"searchResultsList\",\r\n      isLoading: false,\r\n      searchString: `TITLE-ABS-KEY(\"heart attack\")`,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      selectedPaper,\r\n      searchResultsList,\r\n      searchString,\r\n      isSearchHelper,\r\n      relevantList,\r\n      notRelevantList,\r\n      selectedTabId,\r\n      isApiKeyModalOpen,\r\n      apiKey,\r\n      isLoading,\r\n      apiError,\r\n    } = this.state;\r\n\r\n    let listItems;\r\n\r\n    switch (selectedTabId) {\r\n      case \"searchResultsList\":\r\n        listItems = searchResultsList;\r\n        break;\r\n      case \"relevantList\":\r\n        listItems = relevantList;\r\n        break;\r\n      case \"notRelevantList\":\r\n        listItems = notRelevantList;\r\n        break;\r\n      default:\r\n        listItems = searchResultsList;\r\n        break;\r\n    }\r\n\r\n    const _items = [\r\n      {\r\n        key: \"upload\",\r\n        text: \"Upload\",\r\n        disabled: true,\r\n        iconProps: { iconName: \"Upload\" },\r\n        href: \"https://developer.microsoft.com/en-us/fluentui\",\r\n      },\r\n      {\r\n        key: \"share\",\r\n        text: \"Share\",\r\n        disabled: true,\r\n        iconProps: { iconName: \"Share\" },\r\n        onClick: () => console.log(\"Share\"),\r\n      },\r\n      {\r\n        key: \"download\",\r\n        text: \"Download\",\r\n        disabled: true,\r\n        iconProps: { iconName: \"Download\" },\r\n        onClick: () => console.log(\"Download\"),\r\n      },\r\n    ];\r\n\r\n    const _overflowItems = [\r\n      {\r\n        key: \"move\",\r\n        text: \"Move to...\",\r\n        disabled: true,\r\n        onClick: () => console.log(\"Move to\"),\r\n        iconProps: { iconName: \"MoveToFolder\" },\r\n      },\r\n      {\r\n        key: \"copy\",\r\n        text: \"Copy to...\",\r\n        disabled: true,\r\n        onClick: () => console.log(\"Copy to\"),\r\n        iconProps: { iconName: \"Copy\" },\r\n      },\r\n      {\r\n        key: \"rename\",\r\n        text: \"Rename...\",\r\n        disabled: true,\r\n        onClick: () => console.log(\"Rename\"),\r\n        iconProps: { iconName: \"Edit\" },\r\n      },\r\n    ];\r\n\r\n    const _farItems = [\r\n      {\r\n        key: \"settings\",\r\n        text: \"Help & Settings\",\r\n        // This needs an ariaLabel since it's icon-only\r\n        ariaLabel: \"Help & Settings\",\r\n        iconOnly: true,\r\n        iconProps: { iconName: \"Settings\" },\r\n        onClick: this.onSettingsOpenClose,\r\n      },\r\n      {\r\n        key: \"info\",\r\n        text: \"Info\",\r\n        // This needs an ariaLabel since it's icon-only\r\n        ariaLabel: \"Info\",\r\n        iconOnly: true,\r\n        iconProps: { iconName: \"Info\" },\r\n        onClick: () => console.log(\"Info\"),\r\n      },\r\n    ];\r\n\r\n    return (\r\n      <>\r\n        <ApiModal\r\n          isOpen={isApiKeyModalOpen}\r\n          apiKey={apiKey}\r\n          onClearCache={this.onClearCache}\r\n          onApiKeyChange={this.onApiKeyChange}\r\n          onClose={this.onSettingsOpenClose}\r\n        />\r\n        <Stack tokens={{ padding: 25, childrenGap: 20 }}>\r\n          <Image className=\"header\" src={header} alt=\"Header\" />\r\n\r\n          <Stack\r\n            horizontal\r\n            horizontalAlign={\"space-around\"}\r\n            verticalAlign={\"center\"}\r\n            tokens={{ childrenGap: 20 }}\r\n            className={classNames.searchBar}\r\n          >\r\n            <Text style={{ fontWeight: \"bolder\" }}>Potatosearch</Text>\r\n            <StackItem>\r\n              <Stack horizontal>\r\n                <SearchBox\r\n                  styles={{ root: { width: 400 } }}\r\n                  placeholder=\"Search\"\r\n                  onSearch={this.onLoadData}\r\n                  value={searchString}\r\n                />\r\n                <IconButton\r\n                  iconProps={{ iconName: \"Delete\" }}\r\n                  title=\"Clear current Search\"\r\n                  id=\"clearSearch\"\r\n                  ariaLabel=\"Help\"\r\n                  onClick={this.clearSearch}\r\n                />\r\n                <IconButton\r\n                  iconProps={{ iconName: \"Help\" }}\r\n                  title=\"Help\"\r\n                  id=\"searchHelpButton\"\r\n                  ariaLabel=\"Help\"\r\n                  onClick={this.toggleSearchHelper}\r\n                />\r\n                {isSearchHelper && (\r\n                  <TeachingBubble\r\n                    target=\"#searchHelpButton\"\r\n                    hasCloseButton={true}\r\n                    closeButtonAriaLabel=\"Close\"\r\n                    primaryButtonProps={{\r\n                      children: \"Explore Search Tips\",\r\n                      target: \"_blank\",\r\n                      href:\r\n                        \"http://schema.elsevier.com/dtds/document/bkapi/search/SCOPUSSearchTips.htm\",\r\n                    }}\r\n                    onDismiss={this.toggleSearchHelper}\r\n                    headline=\"SCOPUS Search Tips\"\r\n                  >\r\n                    SCOPUS Search API supports a Boolean syntax, which is a type\r\n                    of search allowing users to combine keywords with operators\r\n                    such as AND, NOT and OR to further produce more relevant\r\n                    results. For example, a Boolean search could be \"heart\" AND\r\n                    \"brain\". This would limit the search results to only those\r\n                    documents containing the two keywords.\r\n                  </TeachingBubble>\r\n                )}\r\n              </Stack>\r\n            </StackItem>\r\n            <CommandBar\r\n              items={_items}\r\n              overflowItems={_overflowItems}\r\n              overflowButtonProps={{ ariaLabel: \"More Comands\" }}\r\n              farItems={_farItems}\r\n              ariaLabel=\"Use left and right arrow keys to navigate between commands\"\r\n            />\r\n          </Stack>\r\n          <Stack className=\"\" tokens={{ childrenGap: 5 }}>\r\n            <Stack\r\n              horizontal\r\n              horizontalAlign=\"space-evenly\"\r\n              tokens={{ childrenGap: 10 }}\r\n            >\r\n              <StackItem disableShrink className={classNames.paperFrame}>\r\n                <DetailsFrame\r\n                  isLoading={isLoading}\r\n                  selectedPaper={selectedPaper}\r\n                  onPaperAction={this.onPaperAction}\r\n                />\r\n              </StackItem>\r\n              <StackItem grow={2} className={classNames.paperFrame}>\r\n                <Stack tokens={{ childrenGap: 5 }}>\r\n                  <Pivot\r\n                    selectedKey={selectedTabId}\r\n                    onLinkClick={this.handleTabLinkClick}\r\n                    headersOnly={true}\r\n                    linkFormat={PivotLinkFormat.tabs}\r\n                  >\r\n                    <PivotItem\r\n                      itemKey={\"searchResultsList\"}\r\n                      itemIcon=\"AllApps\"\r\n                      headerText=\"Paper Pool\"\r\n                      itemCount={searchResultsList.length}\r\n                    ></PivotItem>\r\n                    <PivotItem\r\n                      itemKey={\"relevantList\"}\r\n                      itemIcon=\"Accept\"\r\n                      headerText=\"Relevant Paper\"\r\n                      itemCount={relevantList.length}\r\n                    ></PivotItem>\r\n                    <PivotItem\r\n                      itemKey={\"notRelevantList\"}\r\n                      itemIcon=\"StatusCircleErrorX\"\r\n                      headerText=\"Not Relevant\"\r\n                      itemCount={notRelevantList.length}\r\n                    ></PivotItem>\r\n                  </Pivot>\r\n                  {isLoading && (\r\n                    <ProgressIndicator\r\n                      label=\"We're Loading\"\r\n                      description=\"Lots of data from semantic Scholar\"\r\n                    />\r\n                  )}\r\n                  {apiError && (\r\n                    <MessageBar\r\n                      messageBarType={MessageBarType.error}\r\n                      isMultiline={false}\r\n                      onDismiss={this.closeMessageBar}\r\n                      dismissButtonAriaLabel=\"Close\"\r\n                    >\r\n                      {apiError}\r\n                      <Link\r\n                        href=\"https://github.com/dtdi/citetool/wiki/API-Key\"\r\n                        target=\"_blank\"\r\n                      >\r\n                        Did you provide your API Key?\r\n                      </Link>\r\n                    </MessageBar>\r\n                  )}\r\n                  <ResultList\r\n                    items={listItems}\r\n                    isLoading={isLoading}\r\n                    onSelectSingle={this.onSelectSingle}\r\n                  />\r\n                </Stack>\r\n              </StackItem>\r\n            </Stack>\r\n          </Stack>\r\n        </Stack>\r\n      </>\r\n    );\r\n  }\r\n\r\n  async loadSemScholarForMany(items) {\r\n    const controller = new AbortController();\r\n    const signal = controller.signal;\r\n\r\n    items = await Promise.all(\r\n      items.map(async (paper) => {\r\n        const semScholar = await this.loadSemScholar(\r\n          paper.doi,\r\n          controller,\r\n          signal\r\n        );\r\n        if (!semScholar) {\r\n          return paper;\r\n        }\r\n        const newPaper = {\r\n          abstract: semScholar.abstract,\r\n          refs: semScholar.references || [],\r\n          cites: semScholar.citations || [],\r\n          authors: semScholar.authors\r\n            ? semScholar.authors.map((author) => author.name).join(\", \")\r\n            : paper.authors,\r\n          ids: semScholar.references\r\n            ? semScholar.references.map((ref) => {\r\n                return ref.doi || ref.paperId;\r\n              })\r\n            : [],\r\n        };\r\n\r\n        const updatedPaper = {\r\n          ...paper,\r\n          ...newPaper,\r\n        };\r\n        updatedPaper.raw.semScholar = semScholar;\r\n\r\n        return updatedPaper;\r\n      })\r\n    );\r\n    return items;\r\n  }\r\n\r\n  async processSearchResults(result) {\r\n    let items = [];\r\n\r\n    if (!result || !result[\"search-results\"]) {\r\n      return;\r\n    }\r\n\r\n    const searchResults = result[\"search-results\"];\r\n\r\n    const searchQuery = searchResults[\"opensearch:Query\"][\"@searchTerms\"];\r\n\r\n    const entries = searchResults.entry;\r\n\r\n    entries.forEach((entry) => {\r\n      let abstractlink = \"test\";\r\n      let links = entry[\"link\"];\r\n      links.forEach((link) => {\r\n        let linktype = link[\"@ref\"];\r\n        if (linktype === \"scopus\") {\r\n          abstractlink = link[\"@href\"];\r\n        }\r\n      });\r\n\r\n      items.push({\r\n        key: entry[\"prism:doi\"] || entry[\"dc:identifier\"],\r\n        name: entry[\"dc:title\"],\r\n        abstractlink: abstractlink,\r\n        abstract: null,\r\n        refs: [],\r\n        cites: [],\r\n        ids: [],\r\n        authors: entry[\"dc:creator\"], // @todo: replace with full list of authors.\r\n        publication: `${entry[\"prism:publicationName\"]} ${entry[\"prism:volume\"]}`,\r\n        year: entry[\"prism:coverDate\"].substr(0, 4),\r\n        doi: entry[\"prism:doi\"],\r\n        type: entry[\"subtypeDescription\"],\r\n        citedByCount: entry[\"citedby-count\"],\r\n        inBatch: [this.state.searchString],\r\n        raw: {\r\n          scopusEntry: entry,\r\n          semScholar: null,\r\n        },\r\n        inList: LIST_RESULT,\r\n      });\r\n    });\r\n\r\n    items = await this.loadSemScholarForMany(items);\r\n\r\n    const { paperList: oldItems } = this.state;\r\n\r\n    // add to existing papers if exisiting\r\n    items.push(...oldItems);\r\n\r\n    items = this.getPaperScores(items);\r\n    items = items.sort((a, b) => b.relevance - a.relevance);\r\n\r\n    this.setState({\r\n      searchString: searchQuery,\r\n      paperList: items,\r\n      isLoading: false,\r\n    });\r\n    this.onSelectSingle(items[0]);\r\n  }\r\n\r\n  getPaperScores(papers) {\r\n    console.log(papers);\r\n    //Build matrix (Step1) -> direct references.\r\n    /** @description matrix for direct references */\r\n    let matrix = new Array(papers.length);\r\n    const paperIds = papers.map((paper) => paper.doi);\r\n    papers.forEach((paper, i) => {\r\n      let row = new Array(papers.length).fill(0);\r\n      paper.ids.forEach((id) => {\r\n        let idx = paperIds.indexOf(id);\r\n        if (idx !== -1) row[idx] = 1;\r\n      });\r\n      matrix[i] = row;\r\n    });\r\n\r\n    /** @description Lookup-Array - determines whether a paper is in list relevant or not. */\r\n    let isRelevant = papers.map((paper) => paper.inList === LIST_RELEVANT);\r\n\r\n    /**\r\n     * summarize all citations within the set of papers\r\n     */\r\n\r\n    papers = papers.map((p) => {\r\n      return {\r\n        ...p,\r\n        ...{\r\n          refs_relevant: 0,\r\n          refs_pool: 0,\r\n          cited_relevant: 0,\r\n          cited_pool: 0,\r\n          cocit_pool: 0,\r\n          cocit_relevant: 0,\r\n          bibcup_pool: 0,\r\n          bibcup_relevant: 0,\r\n        },\r\n      };\r\n    });\r\n\r\n    const m = {};\r\n\r\n    // each paper\r\n    for (let i = 0; i < papers.length; i++) {\r\n      // each column\r\n      for (let j = 0; j < papers.length; j++) {\r\n        //Referencing Count - a)\r\n        if (matrix[i][j] === 1) {\r\n          if (isRelevant[j]) {\r\n            papers[i].refs_relevant++;\r\n          } else {\r\n            papers[i].refs_pool++;\r\n          }\r\n        }\r\n        //Referenced Count - b)\r\n        if (matrix[j][i] === 1) {\r\n          if (isRelevant[j]) {\r\n            papers[i].cited_relevant++;\r\n          } else {\r\n            papers[i].cited_pool++;\r\n          }\r\n        }\r\n        // each row\r\n        for (let k = 0; k < papers.length; k++) {\r\n          // cocitation: how often has a paper been co-cited? - c)\r\n          if (matrix[j][i] === 1 && matrix[j][k] === 1 && i !== k) {\r\n            if (isRelevant[k]) {\r\n              papers[i].cocit_relevant++;\r\n            } else {\r\n              papers[i].cocit_pool++;\r\n            }\r\n          }\r\n          // bibcoupling: - d)\r\n          if (matrix[i][j] === 1 && matrix[k][j] === 1 && i !== k) {\r\n            if (isRelevant[k]) {\r\n              papers[i].bibcup_relevant++;\r\n            } else {\r\n              papers[i].bibcup_pool++;\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    const relevantKpis = papers.filter((_, i) => isRelevant[i]);\r\n    const poolKpis = papers.filter((_, i) => !isRelevant[i]);\r\n\r\n    m.poolPoolRefs = Math.max(1, ...poolKpis.map((l) => l.refs_pool));\r\n    m.poolPoolCited = Math.max(1, ...poolKpis.map((l) => l.cited_pool));\r\n    m.poolPoolCocit = Math.max(1, ...poolKpis.map((l) => l.cocit_pool));\r\n    m.poolPoolBibcup = Math.max(1, ...poolKpis.map((l) => l.bibcup_pool));\r\n\r\n    m.relRelRefs = Math.max(1, ...relevantKpis.map((l) => l.refs_relevant));\r\n    m.relRelCited = Math.max(1, ...relevantKpis.map((l) => l.cited_relevant));\r\n    m.relRelCocit = Math.max(1, ...relevantKpis.map((l) => l.cocit_relevant));\r\n    m.relRelBibcup = Math.max(1, ...relevantKpis.map((l) => l.bibcup_relevant));\r\n\r\n    m.poolRelRefs = Math.max(1, ...poolKpis.map((l) => l.refs_relevant));\r\n    m.poolRelCited = Math.max(1, ...poolKpis.map((l) => l.cited_relevant));\r\n    m.poolRelCocit = Math.max(1, ...poolKpis.map((l) => l.cocit_relevant));\r\n    m.poolRelBibcup = Math.max(1, ...poolKpis.map((l) => l.bibcup_relevant));\r\n\r\n    papers.forEach((paper, i) => {\r\n      if (isRelevant[i]) {\r\n        paper.refs_relevant /= m.relRelRefs;\r\n        paper.cited_relevant /= m.relRelCited;\r\n        paper.cocit_relevant /= m.relRelCocit;\r\n        paper.bibcup_relevant /= m.relRelBibcup;\r\n\r\n        delete paper.refs_pool;\r\n        delete paper.cited_pool;\r\n        delete paper.cocit_pool;\r\n        delete paper.bibcup_pool;\r\n\r\n        paper.relevance =\r\n          (paper.refs_relevant +\r\n            paper.cited_relevant +\r\n            paper.cocit_relevant +\r\n            paper.bibcup_relevant) /\r\n          4;\r\n      } else {\r\n        paper.refs_pool /= m.poolPoolRefs;\r\n        paper.cited_pool /= m.poolPoolCited;\r\n        paper.cocit_pool /= m.poolPoolCocit;\r\n        paper.bibcup_pool /= m.poolPoolBibcup;\r\n\r\n        paper.refs_relevant /= m.poolRelRefs;\r\n        paper.cited_relevant /= m.poolRelCited;\r\n        paper.cocit_relevant /= m.poolRelCocit;\r\n        paper.bibcup_relevant /= m.poolRelBibcup;\r\n\r\n        paper.relevance =\r\n          (paper.refs_relevant +\r\n            paper.cited_relevant +\r\n            paper.cocit_relevant +\r\n            paper.bibcup_relevant +\r\n            paper.refs_pool +\r\n            paper.cited_pool +\r\n            paper.cocit_pool +\r\n            paper.bibcup_pool) /\r\n          8;\r\n      }\r\n    });\r\n    return papers;\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n// import reportWebVitals from \"./reportWebVitals\";\r\nimport { mergeStyles, initializeIcons } from \"@fluentui/react\";\r\n\r\nimport * as Sentry from \"@sentry/react\";\r\nimport { Integrations } from \"@sentry/tracing\";\r\n\r\nSentry.init({\r\n  dsn:\r\n    \"https://6b5e57b77ebf466980c9e68d76da6978@o503871.ingest.sentry.io/5589576\",\r\n  autoSessionTracking: true,\r\n  integrations: [new Integrations.BrowserTracing()],\r\n\r\n  // We recommend adjusting this value in production, or using tracesSampler\r\n  // for finer control\r\n  tracesSampleRate: 1.0,\r\n});\r\n\r\n// Inject some global styles\r\nmergeStyles({\r\n  selectors: {\r\n    \":global(body), :global(html), :global(#app)\": {\r\n      margin: 0,\r\n      padding: 0,\r\n      height: \"100vh\",\r\n    },\r\n  },\r\n});\r\n\r\ninitializeIcons();\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals(console.log);\r\n"],"sourceRoot":""}